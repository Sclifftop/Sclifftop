<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吃骨头不吐骨头皮，不吃骨头也不吐骨头皮儿~</title>
  
  <subtitle>Finders keepers,losers weepers</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.sclifftop.com/"/>
  <updated>2018-11-15T10:15:29.863Z</updated>
  <id>https://www.sclifftop.com/</id>
  
  <author>
    <name>Sclifftop</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>呵，人类</title>
    <link href="https://www.sclifftop.com/2888/05/21/My-heart-wear-black/"/>
    <id>https://www.sclifftop.com/2888/05/21/My-heart-wear-black/</id>
    <published>2888-05-20T21:21:59.000Z</published>
    <updated>2018-11-15T10:15:29.863Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="呵" scheme="https://www.sclifftop.com/tags/%E5%91%B5/"/>
    
      <category term="呵呵" scheme="https://www.sclifftop.com/tags/%E5%91%B5%E5%91%B5/"/>
    
      <category term="呵呵呵" scheme="https://www.sclifftop.com/tags/%E5%91%B5%E5%91%B5%E5%91%B5/"/>
    
      <category term="呵呵呵呵" scheme="https://www.sclifftop.com/tags/%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5/"/>
    
      <category term="呵呵呵呵呵" scheme="https://www.sclifftop.com/tags/%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5/"/>
    
      <category term="呵呵呵呵呵呵" scheme="https://www.sclifftop.com/tags/%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5/"/>
    
      <category term="呵呵呵呵呵呵呵" scheme="https://www.sclifftop.com/tags/%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5%E5%91%B5/"/>
    
  </entry>
  
  <entry>
    <title>一个没卵用的鼠标骚特效（也就是我现在的特效）</title>
    <link href="https://www.sclifftop.com/2888/05/21/%E4%B8%80%E4%B8%AA%E6%B2%A1%E5%8D%B5%E7%94%A8%E7%9A%84%E9%BC%A0%E6%A0%87%E9%AA%9A%E7%89%B9%E6%95%88/"/>
    <id>https://www.sclifftop.com/2888/05/21/一个没卵用的鼠标骚特效/</id>
    <published>2888-05-20T21:21:00.000Z</published>
    <updated>2018-11-15T10:13:10.790Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前在看一个老哥的博客看到一个比较骚的特效，就是当鼠标移动，后面跟着一条小尾巴，依次是富强、民主等等，于是自己就尝试写代码实现一下，所以我弄了个原生的js实现方法，如果使用jQuery代码更简单，想要我就写。<br>现在我这个就是使用了这个特效，想要的拿去，使用手机的话只有点击的时候才会出现</p></blockquote><hr><blockquote><p>如果你觉得太密了，可以改下延迟时间，嘤嘤</p></blockquote><p>先上代码</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">(function () &#123;</span><br><span class="line">//不赞成显式地使用Array构造函数来创建数组，也就是尽量不要用new Array()</span><br><span class="line">var arr = [&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;, &quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;];</span><br><span class="line">var aIndex = 0;</span><br><span class="line">document.onmousemove = function (ev) &#123;</span><br><span class="line">var oEvent = ev ? ev : window.event;</span><br><span class="line">var tSpan = document.createElement(&apos;div&apos;);</span><br><span class="line">aIndex = (aIndex + 1) % arr.length;</span><br><span class="line">var sTxt = document.createTextNode(arr[aIndex]);</span><br><span class="line">tSpan.appendChild(sTxt);</span><br><span class="line">tSpan.style.left = (oEvent.clientX - 35) + &apos;px&apos;;</span><br><span class="line">tSpan.style.top = (oEvent.clientY - 20) + &apos;px&apos;;</span><br><span class="line">tSpan.style.position = &apos;absolute&apos;;</span><br><span class="line">tSpan.style.width = &apos;34px&apos;;</span><br><span class="line">tSpan.style.height = &apos;17px&apos;;</span><br><span class="line">tSpan.style.fontWeight = &quot;bold&quot;;</span><br><span class="line">tSpan.style.color = &quot;#2B9499&quot;;</span><br><span class="line">tSpan.style.fontSize = 20;</span><br><span class="line">tSpan.style.opacity = 0.76;</span><br><span class="line">tSpan.style.zIndex = 100000;</span><br><span class="line">document.body.appendChild(tSpan);</span><br><span class="line">setTimeout(function () &#123;</span><br><span class="line">document.body.removeChild(tSpan);</span><br><span class="line">&#125;, 380)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><p>稍微解释一下：</p><p>1、首先使用的是立即执行函数，这个表示直接调用执行<br>2、然后添加了事件监听<code>onmousemove</code>，当鼠标移动时就执行<br>3、<code>aIndex</code>每次加1，取<code>arr</code>元素，你也可以写成随机来取，要放到监听外，不然每次都会置0，就只能取“民主”<br>4、首先使用<code>document.createElement()</code>来创建<code>div</code>元素，然后使用<code>document.createTextNode()</code>来创建新文本节点，参数是要插入的文本，然后将文本节点插入<code>div</code>，然后把<code>div</code>插入<code>body</code><br>5、然后就是对一些样式的修改，对文本样式修改不要对<code>sTxt</code>来改，对<code>div</code>来改，还有<code>zIndex</code>表示堆叠顺序，越大越靠前<br>6、也设了一个定时器，380ms移除插入<code>body</code>的<code>div</code>元素，不然就会一直存在<br>7、如果太烦，可以将<code>onmousemove</code>换成<code>onmousedown</code>之类的事件，这样就会变成点击的时候出现，试一下</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前在看一个老哥的博客看到一个比较骚的特效，就是当鼠标移动，后面跟着一条小尾巴，依次是富强、民主等等，于是自己就尝试写代码实现一下，所以我弄了个原生的js实现方法，如果使用jQuery代码更简单，想要我就写。&lt;br&gt;现在我这个就是使用了这个特效，想要的拿去，使用手机的话只有点击的时候才会出现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;如果你觉得太密了，可以改下延迟时间，嘤嘤&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先上代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://www.sclifftop.com/tags/js/"/>
    
      <category term="createElement" scheme="https://www.sclifftop.com/tags/createElement/"/>
    
      <category term="很骚" scheme="https://www.sclifftop.com/tags/%E5%BE%88%E9%AA%9A/"/>
    
  </entry>
  
  <entry>
    <title>Android之Actvity的Flags及作用</title>
    <link href="https://www.sclifftop.com/2018/11/27/Android%E4%B9%8BActvity%E7%9A%84Flags%E5%8F%8A%E4%BD%9C%E7%94%A8/"/>
    <id>https://www.sclifftop.com/2018/11/27/Android之Actvity的Flags及作用/</id>
    <published>2018-11-27T07:21:35.000Z</published>
    <updated>2018-11-29T07:28:02.837Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Activity的Flags有很多，这些标记位用来设定Activity的启动模式，一般来说除一些特殊情况外不需要为Activity设置标记位</p></blockquote><hr><p>常用的几种：<br><a id="more"></a></p><ol><li><code>FLAG_ACTIVITY_NEW_TASK</code><br>◇   这个标记位的作用是为Activity指定<code>singleTask</code>启动模式，和在XML中的<code>android:launchMode=&quot;singleTask&quot;</code>一样，如果指定<code>taskAffinity</code>的Activity存在，则移到栈顶，不存在则创建<br>◇   注：默认情况下，一个应用中的所有activity具有相同的<code>taskAffinity</code>，即应用程序的包名</li><li><code>FLAG_ACTIVITY_SINGLE_TOP</code><br> ◇   这个标记位的作用是为Activity指定<code>singleTop</code>启动模式，和在XML中的<code>android:launchMode=&quot;singleTop&quot;</code>一样，如果已有则不创建，否则创建</li><li><code>FLAG_ACTIVITY_CLEAR_TOP</code><br> ◇   这个标记位一般会和singleTask启动模式一起出现，被启动Activity的实例如果已经存在，那么系统就会调用它的<code>onNewIntent</code>，如果<code>android:launchMode=&quot;standard&quot;</code>，那么它自己也会出栈，然后再创建新的Activity实例并放入栈顶</li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Activity的Flags有很多，这些标记位用来设定Activity的启动模式，一般来说除一些特殊情况外不需要为Activity设置标记位&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;p&gt;常用的几种：&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://www.sclifftop.com/tags/Android/"/>
    
      <category term="flags" scheme="https://www.sclifftop.com/tags/flags/"/>
    
      <category term="启动模式" scheme="https://www.sclifftop.com/tags/%E5%90%AF%E5%8A%A8%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序在编辑器上样式正常，但在手机上不显示样式</title>
    <link href="https://www.sclifftop.com/2018/11/15/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9C%A8%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%8A%E6%A0%B7%E5%BC%8F%E6%AD%A3%E5%B8%B8%EF%BC%8C%E4%BD%86%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E4%B8%8D%E6%98%BE%E7%A4%BA%E6%A0%B7%E5%BC%8F/"/>
    <id>https://www.sclifftop.com/2018/11/15/微信小程序在编辑器上样式正常，但在手机上不显示样式/</id>
    <published>2018-11-15T09:51:53.000Z</published>
    <updated>2018-11-15T09:59:21.272Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前做了个小工具，最近有时间，就加了页面，在编辑器上的<code>wxss</code>样式是正常的，但在手机上预览就无法显示 </p></blockquote><hr><blockquote><p>我目前只发现了一个颜色问题，但产生问题的真正原因没去仔细研究，所以以后遇到其他的研究下再写上来</p></blockquote><p>解决方法：</p><a id="more"></a><ol><li>原因：其他都生效，只是颜色无法正常显示</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">◇   颜色无法生效大部分原因是因为用了8位的argb `如 #1db0b87e`，而不是6位的rgb `如 #b0b87e`，如果你想改变透明度，可以换种写法`rgba(255,0,0,1)`颜色无法生效大部分原因是因为用了8位的argb `如 #1db0b87e`，而不是6位的rgb `如 #b0b87e`，如果你想改变透明度，可以换种写法`rgba(255,0,0,1)`</span><br></pre></td></tr></table></figure><ol><li>待续……</li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前做了个小工具，最近有时间，就加了页面，在编辑器上的&lt;code&gt;wxss&lt;/code&gt;样式是正常的，但在手机上预览就无法显示 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;我目前只发现了一个颜色问题，但产生问题的真正原因没去仔细研究，所以以后遇到其他的研究下再写上来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
    
    </summary>
    
    
      <category term="微信小程序" scheme="https://www.sclifftop.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="wxss" scheme="https://www.sclifftop.com/tags/wxss/"/>
    
      <category term="css" scheme="https://www.sclifftop.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>egret使图片或各种控件变灰</title>
    <link href="https://www.sclifftop.com/2018/10/09/egret%E4%BD%BF%E5%9B%BE%E7%89%87%E6%88%96%E5%90%84%E7%A7%8D%E6%8E%A7%E4%BB%B6%E5%8F%98%E7%81%B0/"/>
    <id>https://www.sclifftop.com/2018/10/09/egret使图片或各种控件变灰/</id>
    <published>2018-10-09T04:00:59.000Z</published>
    <updated>2018-11-15T10:03:12.652Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用 <code>ColorMatrixFilter</code> 类可以将 4 x 5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。该类允许饱和度更改、色相旋转、亮度为 Alpha 以及各种其他效果。</p></blockquote><hr><blockquote><p>使用这个类使控件不可用时变灰，可以不用出灰色的图片资源，下面仅仅变灰，其他不说</p></blockquote><a id="more"></a><p>灰色矩阵：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let colorGrayMatrix = [</span><br><span class="line">    0.3,  0.6,  0,  0,  0,</span><br><span class="line">    0.3,  0.6,  0,  0,  0,</span><br><span class="line">    0.3,  0.6,  0,  0,  0,</span><br><span class="line">     0,    0,   0,  1,  0</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><p>实现功能的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">. . . . . . . .省略. . . . . . . .</span><br><span class="line"></span><br><span class="line">  let colorFilter: egret.ColorMatrixFilter = new egret.ColorMatrixFilter(colorGrayMatrix);</span><br><span class="line"> (&lt;eui.Image&gt;uiObj[&quot;boxImg&quot;]).filters = [colorFilter];</span><br><span class="line"> </span><br><span class="line">. . . . . . . .省略. . . . . . . .</span><br></pre></td></tr></table></figure></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;ColorMatrixFilter&lt;/code&gt; 类可以将 4 x 5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。该类允许饱和度更改、色相旋转、亮度为 Alpha 以及各种其他效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;使用这个类使控件不可用时变灰，可以不用出灰色的图片资源，下面仅仅变灰，其他不说&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="ColorMatrixFilter" scheme="https://www.sclifftop.com/tags/ColorMatrixFilter/"/>
    
      <category term="egret" scheme="https://www.sclifftop.com/tags/egret/"/>
    
  </entry>
  
  <entry>
    <title>使用批处理来批量更新、提交SVN项目</title>
    <link href="https://www.sclifftop.com/2018/07/17/%E4%BD%BF%E7%94%A8%E6%89%B9%E5%A4%84%E7%90%86%E6%9D%A5%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E3%80%81%E6%8F%90%E4%BA%A4SVN%E9%A1%B9%E7%9B%AE/"/>
    <id>https://www.sclifftop.com/2018/07/17/使用批处理来批量更新、提交SVN项目/</id>
    <published>2018-07-17T06:49:56.000Z</published>
    <updated>2018-07-17T06:56:24.000Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>当你更新部分SVN项目，还得右键，然后点“更新”，是不是很烦，没关系，写个批处理<br>如果你想更新所有SVN的项目，只需要使用<code>if exist</code>就好了，不用看下面的了</p></blockquote><p><hr><br>先上代码，如果你不了解bat，可以先复制下来，然后再去学习。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@echo off//这句是不在cmd显示下面的命令，加个@是不显示自身的命令</span><br><span class="line"></span><br><span class="line">for /f %%i in (proall.txt) do ( </span><br><span class="line">echo 更新 %%i</span><br><span class="line">TortoiseProc.exe /command:update  /path:D:\work\%%i /closeonend:2</span><br><span class="line">echo 完成%%i 更新</span><br><span class="line">echo.</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p><hr><br>还有那个proall.txt，其实没什么，就是你要更新的项目，或者项目下的某一个文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">项目1</span><br><span class="line">项目2 </span><br><span class="line">项目3</span><br><span class="line">项目4\排期表</span><br><span class="line">项目4\文档</span><br><span class="line">项目8</span><br></pre></td></tr></table></figure><p><hr><br>接下来解释一下：<br>1、<code>for /f %%i in (*) do()</code></p><ul><li>这句意思是使用<code>for循环</code>来获取项目名，然后执行<code>do</code>里面的命令，<code>for /f</code>是用来读取文本的命令，文本的每一行表示一个元素，空行就跳过</li><li>其次<code>%%i</code>表示一个临时的<code>i</code>，表示<code>proall.txt</code>里面的某一个项目名称，而且是局部变量</li><li>上面的是在<code>proall.txt</code>里面读取要更新的项目名，如果项目多了，只要修改<code>proall.txt</code>就可以了，当然你不嫌麻烦也可以用“数组”，写在bat里面。</li></ul><p>2、<code>echo 更新%%i</code></p><ul><li>只是加个提示，会提示<code>更新项目1、更新项目2</code></li></ul><p>3、 <code>TortoiseProc.exe /command:update  /path:D:\work\%%i /closeonend:2</code> 这一句是最主要的</p><ul><li><code>TortoiseProc.exe</code>表示执行TortoiseSVN的GUI程序</li><li><code>update</code>，也就是执行更新项目的命令</li><li>接下来的<code>path</code>表示要更新哪个项目，我放在了<code>D:\work</code>目录下，会通过从<code>proall.txt</code>里面读取的来依次更新</li><li><code>closeonend:2</code>表示更新时如果没发生错误和冲突则自动关闭对话框</li></ul><p>4、<code>echo 完成%%i 更新</code></p><ul><li>也是加个提示，<code>完成项目1 更新</code>等等</li></ul><p>5、<code>echo.</code></p><ul><li>如果你眼神还可以就会发现<code>echo</code>后面有个<code>.</code>，记住是紧挨着<code>echo</code>，没有空格，表示<code>换行</code></li></ul><p>6、<code>exit</code></p><ul><li>表示更新完的话自动关闭cmd命令窗口，当然如果你想看下更新了什么，可以改成<code>pause</code></li></ul><p><hr></p><blockquote><p>如果想把更新改为提交到SVN的话，改下<code>command</code>就好了啊，<code>update</code>改为<code>commit</code> </p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;当你更新部分SVN项目，还得右键，然后点“更新”，是不是很烦，没关系，写个批处理&lt;br&gt;如果你想更新所有SVN的项目，只需要使用&lt;code&gt;if exist&lt;/code&gt;就好了，不用看下面的了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;hr&gt;&lt;br&gt;先上代码，如果你不了解bat，可以先复制下来，然后再去学习。&lt;/p&gt;
    
    </summary>
    
    
      <category term="svn" scheme="https://www.sclifftop.com/tags/svn/"/>
    
      <category term="批处理" scheme="https://www.sclifftop.com/tags/%E6%89%B9%E5%A4%84%E7%90%86/"/>
    
      <category term="update" scheme="https://www.sclifftop.com/tags/update/"/>
    
      <category term="commit" scheme="https://www.sclifftop.com/tags/commit/"/>
    
      <category term="bat" scheme="https://www.sclifftop.com/tags/bat/"/>
    
  </entry>
  
  <entry>
    <title>node.js中文件的几种读取方法及其中两种方法的区别</title>
    <link href="https://www.sclifftop.com/2018/06/06/node-js%E4%B8%AD%E6%96%87%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E8%AF%BB%E5%8F%96%E6%96%B9%E6%B3%95%E5%8F%8A%E5%85%B6%E4%B8%AD%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://www.sclifftop.com/2018/06/06/node-js中文件的几种读取方法及其中两种方法的区别/</id>
    <published>2018-06-06T09:43:12.000Z</published>
    <updated>2018-06-11T09:51:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><hr></p><blockquote><p>先说一下文件读取的方法，然后再说一下<code>readFile()</code> 和 <code>readFileSync()</code>方法的区别</p></blockquote><h2 id="文件的读取方法"><a href="#文件的读取方法" class="headerlink" title="文件的读取方法"></a>文件的读取方法</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">//需要先导入内置模块</span><br><span class="line">var fs = require(&apos;fs&apos;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">//第一种，使用第二、三种就可以了</span><br><span class="line">readFile: function (path) &#123;</span><br><span class="line">var buf = new Buffer(1024);</span><br><span class="line">fs.open(path, &apos;r+&apos; /*以读写的方式打开文件*/, function (err, fd /*文件描述符*/) &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">console.log(err);</span><br><span class="line">&#125; else &#123;</span><br><span class="line"> //异步读取，同样的，它也有个对应的同步读取fs.readSync()</span><br><span class="line">fs.read(fd, buf, 0, buf.length, 0, function (err, bytes) &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">console.log(err);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if (bytes &gt; 0) &#123;</span><br><span class="line">console.log(buf.slice(0, bytes).toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">fs.close(fd, function (err) &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">console.log(err);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line">//第二种</span><br><span class="line">readFileSync: function (path) &#123;</span><br><span class="line">var data = fs.readFileSync(path, &apos;utf-8&apos;);</span><br><span class="line">return data;</span><br><span class="line">&#125;,</span><br><span class="line">//第三种</span><br><span class="line">readFileAsync: function (path) &#123;</span><br><span class="line">fs.readFile(path, function (err, data) &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">console.log(err);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">console.log(data.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="两种方法的区别"><a href="#两种方法的区别" class="headerlink" title="两种方法的区别"></a>两种方法的区别</h2><p>1、<code>fs.readFile(file)</code>是异步的</p><ul><li>不会阻塞后面代码的执行</li></ul><p>2、<code>fs.readFileSync(file)</code> 是同步的</p><ul><li>会阻塞后面代码的执行</li></ul><blockquote><p>不管怎样，两个方法最后都是调用的c++同一个读取文件的方法，只不过自定义的方法里面调用的是<code>fstat()</code> 或 <code>fstatSync()</code>，看情况使用，一般用异步的</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先说一下文件读取的方法，然后再说一下&lt;code&gt;readFile()&lt;/code&gt; 和 &lt;code&gt;readFileSync()&lt;/code&gt;方法的区别&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;文件的读取方法&quot;&gt;&lt;a href=&quot;#文件的读取方法&quot; class=&quot;headerlink&quot; title=&quot;文件的读取方法&quot;&gt;&lt;/a&gt;文件的读取方法&lt;/h2&gt;
    
    </summary>
    
    
      <category term="node.js" scheme="https://www.sclifftop.com/tags/node-js/"/>
    
      <category term="同步异步" scheme="https://www.sclifftop.com/tags/%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/"/>
    
      <category term="文件读取" scheme="https://www.sclifftop.com/tags/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>使用exe4j将jar转为exe（口述）</title>
    <link href="https://www.sclifftop.com/2018/05/31/%E4%BD%BF%E7%94%A8exe4j%E5%B0%86jar%E8%BD%AC%E4%B8%BAexe%EF%BC%88%E5%8F%A3%E8%BF%B0%EF%BC%89/"/>
    <id>https://www.sclifftop.com/2018/05/31/使用exe4j将jar转为exe（口述）/</id>
    <published>2018-05-31T10:22:42.000Z</published>
    <updated>2018-06-12T12:20:34.000Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>接上一篇《使用java自做的切图工具》，上一篇是教你做切图工具，这个是怎么将jar 转成exe，使用的工具是exe4j，口述是不是有点贱</p></blockquote><h2 id="将jar弄成exe"><a href="#将jar弄成exe" class="headerlink" title="将jar弄成exe"></a>将jar弄成exe</h2><blockquote><p>老铁，那个切图工具做完后是jar，只能在自己电脑上运行，在别的电脑上运行需要安装jre，非常麻烦，所以就得生成个exe</p></blockquote><a id="more"></a><p>下面是方法（口述，不给你弄图了，可能有漏，想详细知道的尽管问我，下面有联系方式）：<br>1、右击项目，选export，然后选Runnable JAR file，选那个JAR file干嘛，用这个多好<br>2、我刚才试了一下，接下来你基本不用做什么，选你那个项目，再选保存路径，下面的不用管，再点finish就行了<br>3、现在双击你生成的jar，是可以运行的，不能运行肯定是哪错了，全都弄完了，生成个jar 还错？请下跪<br>4、然后打开exe4j，破解版的下一个，找不到，还是那句话，私我，我给你发<br>5、打开后点next，然后选“ ‘JAR in EXE’ mode”，不会选，请下跪<br>6、然后next，填写会吧，一个是你应用名，一个是输出的exe的位置<br>7、填executable name，随便，反正生成后能随便改，然后是icon file，你随便在网上找个，后缀是.ico，然后看左侧<br>8、那一列什么redirection、Service options等等，你只要改redirection，就是如果文件有错，是否生成log，看你意愿<br>9、那个32-bit or 64-bit，应该会选吧，64位就勾上，好了，其他不用改，右下next<br>10、VM parameters其实不用填，一个简单的切图填个锤子<br>11、选那个Class path，点右侧加号，然后选Archive<br>12、如果选文件夹弹不出来（有些exe4j有bug），请手动输入，路径写全，.jar也要写上<br>13、然后点ojbk，然后是底部的Class path，最右侧点开，它会自动检测主类，选就好了<br>14、准备jre，把jre复制到你选的jar同级下面<br>15、然后选exe4j上面左侧的JRE，最小最大版本看你意愿写，然后看向左侧，选Search sequence<br>16、把那三个删完，因为你要“到处运行”，可是没有jre的就不能运行，你不能逼别人装吧，所以JAVA_HOME没jb用<br>16、点右侧加号，选Directiry，选你那个同级的jre，然后ojbk<br>17、然后next，这个是开启软件的启动画面，自己选个苍老师的图片放上也行<br>18、然后就完了<br>19、你要建个新文件夹，把那个生成的exe和jre放在同级，打包，就可以到处运行了。</p><hr><p>接下来，你就可以在别的windows系统上到处运行了。<br>评论功能挂了，加我QQ问我：2475904040<br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;接上一篇《使用java自做的切图工具》，上一篇是教你做切图工具，这个是怎么将jar 转成exe，使用的工具是exe4j，口述是不是有点贱&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;将jar弄成exe&quot;&gt;&lt;a href=&quot;#将jar弄成exe&quot; class=&quot;headerlink&quot; title=&quot;将jar弄成exe&quot;&gt;&lt;/a&gt;将jar弄成exe&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;老铁，那个切图工具做完后是jar，只能在自己电脑上运行，在别的电脑上运行需要安装jre，非常麻烦，所以就得生成个exe&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="exe4j" scheme="https://www.sclifftop.com/tags/exe4j/"/>
    
      <category term="jar to exe" scheme="https://www.sclifftop.com/tags/jar-to-exe/"/>
    
  </entry>
  
  <entry>
    <title>使用java语言自做切图工具</title>
    <link href="https://www.sclifftop.com/2018/05/31/%E4%BD%BF%E7%94%A8java%E8%AF%AD%E8%A8%80%E8%87%AA%E5%81%9A%E7%9A%84%E5%88%87%E5%9B%BE%E5%B7%A5%E5%85%B7/"/>
    <id>https://www.sclifftop.com/2018/05/31/使用java语言自做的切图工具/</id>
    <published>2018-05-31T10:14:48.000Z</published>
    <updated>2018-06-05T06:35:46.000Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>同事之前的软件到期了，又不想续费，还不知道怎么破解，所以我就帮他做了一个切图工具，想要的私我，因为是有空做的，我现在又不是干java的，之前学的还记得一点，主要就是为了实现最基本的切图，所以会有一些测不到的bug，也就没有放到github上面，如果用了，遇到一些想让我改的bug，可以和我说，我有空就改一下。<br>距做完这个都过几个月了，太懒了，就一直拖着没发博。</p></blockquote><p><hr></p><blockquote><p>接下来我放一些最主要的代码，java bean那些简单的就不放了，知道就好，我也会适当注释一下.<br>之前是那个啥，用的是SelectFile 弹出选择文件对话框，后来又改成了用文件拖拽控件DropTarget拖动，其实没差</p></blockquote><a id="more"></a><h2 id="PicDivTool-java"><a href="#PicDivTool-java" class="headerlink" title="PicDivTool.java"></a>PicDivTool.java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br></pre></td><td class="code"><pre><span class="line">package sc.pro.tool;</span><br><span class="line"></span><br><span class="line">//不删，任性</span><br><span class="line">import java.awt.BorderLayout;</span><br><span class="line">import java.awt.Color;</span><br><span class="line">import java.awt.FlowLayout;</span><br><span class="line">import java.awt.Font;</span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.awt.GridLayout;</span><br><span class="line">import java.awt.HeadlessException;</span><br><span class="line">import java.awt.Image;</span><br><span class="line">import java.awt.Rectangle;</span><br><span class="line">import java.awt.Toolkit;</span><br><span class="line">import java.awt.datatransfer.DataFlavor;</span><br><span class="line">import java.awt.datatransfer.Transferable;</span><br><span class="line">import java.awt.dnd.DnDConstants;</span><br><span class="line">import java.awt.dnd.DropTarget;</span><br><span class="line">import java.awt.dnd.DropTargetAdapter;</span><br><span class="line">import java.awt.dnd.DropTargetDropEvent;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileNotFoundException;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.UnsupportedEncodingException;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Iterator;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.Map.Entry;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line">import javax.imageio.ImageReadParam;</span><br><span class="line">import javax.imageio.ImageReader;</span><br><span class="line">import javax.imageio.stream.ImageInputStream;</span><br><span class="line">import javax.swing.BorderFactory;</span><br><span class="line">import javax.swing.JButton;</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JLabel;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.JTextArea;</span><br><span class="line">import javax.swing.border.Border;</span><br><span class="line">import javax.swing.border.LineBorder;</span><br><span class="line"></span><br><span class="line">//这个，就是这个，这个解析json的可以说很重要了，而且生成exe也要引进去，想要也私我</span><br><span class="line">import org.json.JSONObject;</span><br><span class="line"></span><br><span class="line">import sc.pro.bean.JsonContent;</span><br><span class="line">import sc.pro.bean.JsonInfo;</span><br><span class="line">import sc.pro.bean.PicInfo;</span><br><span class="line">import sc.pro.bean.SavePathInfo;</span><br><span class="line"></span><br><span class="line">public class PicDivTool extends JFrame &#123;</span><br><span class="line">public static String selectPic = &quot;选择图片：&quot;;</span><br><span class="line">public static String selectJson = &quot;选择Json自动匹配Pic：&quot;;</span><br><span class="line">public static String setPath = &quot;选择保存路径：&quot;;</span><br><span class="line">public static String savePic = &quot;确认切图&quot;;</span><br><span class="line">public static String PNG = &quot;.png&quot;;</span><br><span class="line">private JTextArea jta1;</span><br><span class="line">private JTextArea jta2;</span><br><span class="line">private JTextArea jta3;</span><br><span class="line">private Border border = BorderFactory.createEmptyBorder(5, 5, 5, 5);</span><br><span class="line">Map&lt;String, JsonContent&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">private JsonInfo jInfo;</span><br><span class="line">private PicInfo pInfo;</span><br><span class="line">private SavePathInfo sInfo;</span><br><span class="line">private ActionListener listener = new ActionListener() &#123;</span><br><span class="line">public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">JButton b = (JButton) e.getSource();</span><br><span class="line">String label = b.getText();</span><br><span class="line">if (label.equals(savePic)) &#123;</span><br><span class="line">//根据那个按钮text绑定动作，之前是三个，现在是拖动就剩一个了</span><br><span class="line">b.addActionListener(new SavePic());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//获取json和图片的，其实图片就是改个后缀，因为文件名是一样的</span><br><span class="line">private DropTargetAdapter adapter2 = new DropTargetAdapter() &#123;</span><br><span class="line">public void drop(DropTargetDropEvent d) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">Transferable tf = d.getTransferable();</span><br><span class="line">if (tf.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) &#123;</span><br><span class="line">d.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);</span><br><span class="line">List lt = (List) tf.getTransferData(DataFlavor.javaFileListFlavor);</span><br><span class="line">Iterator itor = lt.iterator();</span><br><span class="line">if (itor.hasNext()) &#123;</span><br><span class="line">File f = (File) itor.next();</span><br><span class="line">jInfo = new JsonInfo(&quot;&quot;, f.getAbsolutePath());</span><br><span class="line">String jsonContent = getContent(f.getAbsolutePath());</span><br><span class="line">jsonOperation(jsonContent);</span><br><span class="line"></span><br><span class="line">String jsonPathTemp = f.getAbsolutePath();</span><br><span class="line">String picPathName = jsonPathTemp.substring(0, jsonPathTemp.lastIndexOf(&quot;.&quot;)) + &quot;.png&quot;;</span><br><span class="line">pInfo = new PicInfo(&quot;&quot;, picPathName);</span><br><span class="line">jta2.setText(f.getAbsolutePath() + &quot;\n&quot; + picPathName);</span><br><span class="line">&#125;</span><br><span class="line">d.dropComplete(true);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">d.rejectDrop();</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">//获取保存路径的</span><br><span class="line">private DropTargetAdapter adapter3 = new DropTargetAdapter() &#123;</span><br><span class="line">public void drop(DropTargetDropEvent d) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">Transferable tf = d.getTransferable();</span><br><span class="line">if (tf.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) &#123;</span><br><span class="line">d.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);</span><br><span class="line">List lt = (List) tf.getTransferData(DataFlavor.javaFileListFlavor);</span><br><span class="line">Iterator itor = lt.iterator();</span><br><span class="line">if (itor.hasNext()) &#123;</span><br><span class="line">File f = (File) itor.next();</span><br><span class="line">jta3.setText(&quot;\n&quot; + f.getAbsolutePath());</span><br><span class="line">sInfo = new SavePathInfo(f.getAbsolutePath());</span><br><span class="line">&#125;</span><br><span class="line">d.dropComplete(true);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">d.rejectDrop();</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">public PicDivTool() &#123;</span><br><span class="line">super();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public PicDivTool(String title) throws HeadlessException &#123;</span><br><span class="line">super(title);</span><br><span class="line">initFrame();</span><br><span class="line">initPB();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 总窗体</span><br><span class="line">private void initFrame() &#123;</span><br><span class="line">this.setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">this.setLocation(500, 300);</span><br><span class="line">this.setSize(450, 480);</span><br><span class="line">this.setResizable(false);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 内面板</span><br><span class="line">private void initPB() &#123;</span><br><span class="line">initPanel();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void initPanel() &#123;</span><br><span class="line">JPanel panel = new JPanel();</span><br><span class="line">panel.setBorder(border);</span><br><span class="line">panel.setLayout(new GridLayout(6, 1));</span><br><span class="line">createDragPanel(panel);</span><br><span class="line">this.add(panel, BorderLayout.CENTER);</span><br><span class="line">&#125;</span><br><span class="line">//生成里面的那些界面什么的</span><br><span class="line">private void createDragPanel(JPanel panel) &#123;</span><br><span class="line">// JLabel jl1 = new JLabel(selectPic);</span><br><span class="line">JLabel jl2 = new JLabel(selectJson);</span><br><span class="line">JLabel jl3 = new JLabel(setPath);</span><br><span class="line"></span><br><span class="line">//因为同事连图片都不想拖，所以把这个去掉了，上面的adapter删掉了，然后加个改后缀的</span><br><span class="line">// jta1 = new JTextArea();</span><br><span class="line">// jta1.setEditable(false);</span><br><span class="line">// jta1.setBackground(new java.awt.Color(166, 235, 220));</span><br><span class="line">// jta1.setBorder(new LineBorder(new java.awt.Color(121, 232, 208), 3));</span><br><span class="line"></span><br><span class="line">//拖json的区域</span><br><span class="line">jta2 = new JTextArea();</span><br><span class="line">jta2.setEditable(false);</span><br><span class="line">jta2.setBackground(new java.awt.Color(243, 201, 201));</span><br><span class="line">jta2.setBorder(new LineBorder(new java.awt.Color(255, 184, 184), 3));</span><br><span class="line"></span><br><span class="line">//拖保存路径的区域</span><br><span class="line">jta3 = new JTextArea();</span><br><span class="line">jta3.setEditable(false);</span><br><span class="line">jta3.setBackground(new java.awt.Color(192, 242, 170));</span><br><span class="line">jta3.setBorder(new LineBorder(new java.awt.Color(134, 230, 90), 3));</span><br><span class="line"></span><br><span class="line">// panel.add(jl1);</span><br><span class="line">// panel.add(jta1);</span><br><span class="line">// new DropTarget(jta1, DnDConstants.ACTION_COPY_OR_MOVE, adapter1);</span><br><span class="line"></span><br><span class="line">panel.add(jl2);</span><br><span class="line">panel.add(jta2);</span><br><span class="line">new DropTarget(jta2, DnDConstants.ACTION_COPY_OR_MOVE, adapter2);</span><br><span class="line"></span><br><span class="line">panel.add(jl3);</span><br><span class="line">panel.add(jta3);</span><br><span class="line">new DropTarget(jta3, DnDConstants.ACTION_COPY_OR_MOVE, adapter3);</span><br><span class="line">panel.add(new JLabel());</span><br><span class="line">JPanel p2 = new JPanel();</span><br><span class="line">p2.setBackground(new java.awt.Color(125, 223, 190));</span><br><span class="line">p2.setBorder(new LineBorder(new java.awt.Color(36, 209, 151), 3));</span><br><span class="line">p2.setLayout(new FlowLayout(FlowLayout.CENTER, 98, 21));</span><br><span class="line">JButton jb1 = new JButton(savePic);</span><br><span class="line">jb1.setFont(new Font(&quot;宋体&quot;, Font.PLAIN, 17));</span><br><span class="line">jb1.addActionListener(listener);</span><br><span class="line">p2.add(jb1);</span><br><span class="line">panel.add(p2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//之前有个按钮去掉了，这个用不着</span><br><span class="line">class ClearAll implements ActionListener &#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">jta1.setText(&quot;&quot;);</span><br><span class="line">jta2.setText(&quot;&quot;);</span><br><span class="line">jta3.setText(&quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//点击保存切图，就是开切的实现方法</span><br><span class="line">class SavePic implements ActionListener &#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">// ImgCutUtil.cutImg(894, 401, 22, 43, &quot;E:\\qsbattle01.png&quot;,</span><br><span class="line">// &quot;E:\\qsbattlewd020_1_png.png&quot;);</span><br><span class="line">// System.out.println(sInfo.getSavePath() + &quot; &quot; + pInfo.getPicPath()</span><br><span class="line">// + &quot; &quot; + jInfo.getJsonPath());</span><br><span class="line"></span><br><span class="line">for (Map.Entry&lt;String, JsonContent&gt; enItem : map.entrySet()) &#123;</span><br><span class="line">String key = enItem.getKey();</span><br><span class="line">JsonContent jc = enItem.getValue();</span><br><span class="line">String picPath = (pInfo.getPicPath()).replaceAll(&quot;\\\\&quot;, &quot;/&quot;);</span><br><span class="line">String newPicPath = (sInfo.getSavePath()).replaceAll(&quot;\\\\&quot;, &quot;/&quot;);</span><br><span class="line">String newPicPathName = newPicPath + &quot;/&quot; + key + PNG;</span><br><span class="line">// System.out.println(</span><br><span class="line">// enItem.getKey() + &quot; &quot; + jc.getX() + &quot; &quot; + picPath + &quot; &quot; +</span><br><span class="line">// newPicPathName + &quot; &quot; + newPicPath);</span><br><span class="line">//这个是最主要的，老铁</span><br><span class="line">ImgCutUtil.cutAndDrawImg(jc.getX(), jc.getY(), jc.getW(), jc.getH(), jc.getOffX(), jc.getOffY(),jc.getSourceW(), jc.getSourceH(), picPath, newPicPathName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//就是json里面的各图片的坐标</span><br><span class="line">private String getContent(String fileName) &#123;</span><br><span class="line">String encoding = &quot;UTF-8&quot;;</span><br><span class="line">File file = new File(fileName);</span><br><span class="line">Long filelength = file.length();</span><br><span class="line">byte[] filecontent = new byte[filelength.intValue()];</span><br><span class="line">try &#123;</span><br><span class="line">FileInputStream in = new FileInputStream(file);</span><br><span class="line">in.read(filecontent);</span><br><span class="line">in.close();</span><br><span class="line">&#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">try &#123;</span><br><span class="line">return new String(filecontent, encoding);</span><br><span class="line">&#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//获取json，然后放在map里面</span><br><span class="line">private void jsonOperation(String jsonContent) &#123;</span><br><span class="line">JSONObject obj;</span><br><span class="line">try &#123;</span><br><span class="line">obj = new JSONObject(jsonContent);</span><br><span class="line">if (obj != null) &#123;</span><br><span class="line">JSONObject frameObj = obj.getJSONObject(&quot;frames&quot;);</span><br><span class="line">Iterator theFrame = frameObj.keys();</span><br><span class="line">JsonContent js;</span><br><span class="line">for (Iterator&lt;Map.Entry&lt;String, JsonContent&gt;&gt; it = map.entrySet().iterator(); it.hasNext();) &#123;</span><br><span class="line">Entry&lt;String, JsonContent&gt; item = it.next();</span><br><span class="line">it.remove();</span><br><span class="line">&#125;</span><br><span class="line">while (theFrame.hasNext()) &#123;</span><br><span class="line">String curItemId = (String) theFrame.next();</span><br><span class="line">String newItemId = curItemId.substring(0, curItemId.length() - 4);</span><br><span class="line">JSONObject curItemObj = frameObj.getJSONObject(curItemId);</span><br><span class="line">int picX = curItemObj.getInt(&quot;x&quot;);</span><br><span class="line">int picY = curItemObj.getInt(&quot;y&quot;);</span><br><span class="line">int picH = curItemObj.getInt(&quot;h&quot;);</span><br><span class="line">int picW = curItemObj.getInt(&quot;w&quot;);</span><br><span class="line">int picOffX = curItemObj.getInt(&quot;offX&quot;);</span><br><span class="line">int picOffY = curItemObj.getInt(&quot;offY&quot;);</span><br><span class="line">int picSourW = curItemObj.getInt(&quot;sourceW&quot;);</span><br><span class="line">int picSourH = curItemObj.getInt(&quot;sourceH&quot;);</span><br><span class="line">js = new JsonContent(picX, picY, picW, picH, picOffX, picOffY, picSourW, picSourH);</span><br><span class="line">map.put(newItemId, js);</span><br><span class="line">// System.out.println(newItemId + &quot; &quot; + picX + &quot; &quot; + picY +</span><br><span class="line">// &quot; &quot; + picH);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">System.out.println(&quot;错了&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 图片剪切类，这个是最主要的，其他都是界面、获取内容什么的</span><br><span class="line">class ImgCutUtil &#123;</span><br><span class="line">public static void cutAndDrawImg(int x, int y, int width, int height, int offsetX, int offsetY, int sourceW, int sourceH, String sourPath, String descPath) &#123;</span><br><span class="line">FileInputStream is = null;</span><br><span class="line">ImageInputStream iis = null;</span><br><span class="line">File file = null;</span><br><span class="line">try &#123;</span><br><span class="line">is = new FileInputStream(sourPath);</span><br><span class="line">String fileSuffix = sourPath.substring(sourPath.lastIndexOf(&quot;.&quot;) + 1);</span><br><span class="line">Iterator&lt;ImageReader&gt; it = ImageIO.getImageReadersByFormatName(fileSuffix);</span><br><span class="line">ImageReader reader = it.next();</span><br><span class="line">iis = ImageIO.createImageInputStream(is);</span><br><span class="line">reader.setInput(iis, true);</span><br><span class="line">ImageReadParam param = reader.getDefaultReadParam();</span><br><span class="line">Rectangle rect = new Rectangle(x, y, width, height);</span><br><span class="line">param.setSourceRegion(rect);</span><br><span class="line">BufferedImage bi = reader.read(0, param);</span><br><span class="line">ImageIO.write(bi, fileSuffix, new File(descPath));</span><br><span class="line"></span><br><span class="line">// 之前做了一个，是按json里面的长宽进行切，然后生成，但同事后来让改成长和宽要加偏移，就是下面这个方法</span><br><span class="line">file = new File(descPath);</span><br><span class="line">BufferedImage src = javax.imageio.ImageIO.read(file);</span><br><span class="line">int theWidth = src.getWidth();</span><br><span class="line">int theHeight = src.getHeight();</span><br><span class="line">int temp = src.getRGB(3, 3);</span><br><span class="line">BufferedImage img = new BufferedImage(sourceW, sourceH, BufferedImage.TYPE_4BYTE_ABGR);</span><br><span class="line">for (int i = 0; i &lt; sourceW; ++i)// 把原图片的内容复制到新的图片，同时把背景设为透明</span><br><span class="line">&#123;</span><br><span class="line">for (int j = 0; j &lt; sourceH; ++j) &#123;</span><br><span class="line">if (i &lt; theWidth &amp;&amp; j &lt; theHeight) &#123;</span><br><span class="line">if (src.getRGB(i, j) == temp)</span><br><span class="line">img.setRGB(i, j, temp &amp; 0x00ffffff);// 这里把背景设为透明</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if (img.getRGB(i, j) == temp)</span><br><span class="line">img.setRGB(i, j, temp &amp; 0x00ffffff);// 这里把背景设为透明</span><br><span class="line">else</span><br><span class="line">img.setRGB(i, j, img.getRGB(i, j));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//下面这两句很重要，而且不用引入那些快要被淘汰不用的类，可以说很方便了</span><br><span class="line">img.getGraphics().drawImage(src, offsetX, offsetY, theWidth, theHeight, null);</span><br><span class="line">ImageIO.write(img, fileSuffix, new File(descPath));</span><br><span class="line"></span><br><span class="line">&#125; catch (Exception ex) &#123;</span><br><span class="line">ex.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">if (is != null) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">is.close();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">is = null;</span><br><span class="line">&#125;</span><br><span class="line">if (iis != null) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">iis.close();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">iis = null;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##PicDivMain.java 就是主类呗 ##<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package sc.pro.main;</span><br><span class="line"></span><br><span class="line">import javax.swing.UIManager;</span><br><span class="line">import javax.swing.UnsupportedLookAndFeelException;</span><br><span class="line"></span><br><span class="line">import sc.pro.tool.PicDivTool;</span><br><span class="line"></span><br><span class="line">public class PicDivMain &#123;</span><br><span class="line">public static void main(String[] args) throws ClassNotFoundException, InstantiationException,</span><br><span class="line">IllegalAccessException, UnsupportedLookAndFeelException &#123;</span><br><span class="line">//这个是改一下UI，就是好看一点，默认的主题丑</span><br><span class="line">String lookAndFeel = &quot;com.sun.java.swing.plaf.windows.WindowsLookAndFeel&quot;;</span><br><span class="line">UIManager.setLookAndFeel(lookAndFeel);</span><br><span class="line">PicDivTool myDivTool = new PicDivTool(&quot;迦苇切图工具&quot;);</span><br><span class="line">myDivTool.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>##MANIFEST.MF，因为有引入那个啥##</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//有用到解析json，所以得弄这个，lib要和src同级，知道？</span><br><span class="line">Manifest-Version: 1.0 </span><br><span class="line">Main-Class: sc.pro.main.PicDivMain</span><br><span class="line">Class-Path: lib/org.json.jar</span><br></pre></td></tr></table></figure><p><br><hr></p><p>上面就是最主要的所有，需要的可以拿去学习。</p><hr><blockquote><p>然后我上面说了教你怎么把jar弄成exe，所以看这篇《将jar弄成exe（口述）》，分开写贱贱的？</p></blockquote><hr><p>接下来是我想说的几点：<br>1、并不想说什么。<br>2、没了<br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;同事之前的软件到期了，又不想续费，还不知道怎么破解，所以我就帮他做了一个切图工具，想要的私我，因为是有空做的，我现在又不是干java的，之前学的还记得一点，主要就是为了实现最基本的切图，所以会有一些测不到的bug，也就没有放到github上面，如果用了，遇到一些想让我改的bug，可以和我说，我有空就改一下。&lt;br&gt;距做完这个都过几个月了，太懒了，就一直拖着没发博。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;接下来我放一些最主要的代码，java bean那些简单的就不放了，知道就好，我也会适当注释一下.&lt;br&gt;之前是那个啥，用的是SelectFile 弹出选择文件对话框，后来又改成了用文件拖拽控件DropTarget拖动，其实没差&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://www.sclifftop.com/tags/java/"/>
    
      <category term="imageio" scheme="https://www.sclifftop.com/tags/imageio/"/>
    
      <category term="swing" scheme="https://www.sclifftop.com/tags/swing/"/>
    
      <category term="jsonContent" scheme="https://www.sclifftop.com/tags/jsonContent/"/>
    
      <category term="切图工具" scheme="https://www.sclifftop.com/tags/%E5%88%87%E5%9B%BE%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>console对象的方法log()、info()、warn()、error()区别及几个实用的方法</title>
    <link href="https://www.sclifftop.com/2018/05/18/console%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95log()%E3%80%81info()%E3%80%81warn()%E3%80%81error()%E5%8C%BA%E5%88%AB%E5%8F%8A%E5%87%A0%E4%B8%AA%E5%AE%9E%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://www.sclifftop.com/2018/05/18/console对象的方法log()、info()、warn()、error()区别及几个实用的方法/</id>
    <published>2018-05-18T08:12:47.000Z</published>
    <updated>2018-06-01T08:18:36.000Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>先说一下console，JavaScript 原生中默认是没有 Console 对象,这是某些浏览器提供的内置对象。<br>在不同的浏览器里显示可能不同</p></blockquote><hr><h2 id="log-、info-、warn-、error-区别"><a href="#log-、info-、warn-、error-区别" class="headerlink" title="log()、info()、warn()、error()区别"></a>log()、info()、warn()、error()区别</h2><a id="more"></a><p>1、 log()和info()</p><ul><li>这两个没区别，看别人有说info()前有个蓝色的图标，不过我使用的谷歌浏览器运行时没有<br><img src="https://img-blog.csdn.net/20180518152449197?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NfY2xpZmZ0b3A=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="Loginfo_Img"><br>因为没有运行出来，下面这张图是在网上偷的，地址：<a href="https://zhuanlan.zhihu.com/p/23080626。" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/23080626。</a><br><img src="https://img-blog.csdn.net/20180518162517407?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NfY2xpZmZ0b3A=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="Info_Img"></li></ul><p>2、warn()和error()</p><ul><li>warn()输出的log前有个黄色的图标</li><li>error()输出的log前有个红色的图标<br><img src="https://img-blog.csdn.net/2018051815260339?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NfY2xpZmZ0b3A=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="WarnError_Img"></li></ul><hr><h2 id="几个实用的方法"><a href="#几个实用的方法" class="headerlink" title="几个实用的方法"></a>几个实用的方法</h2><p>1、trace()</p><ul><li>调试JavaScript程序时，使用console.trace()，不仅会打印函数调用栈信息，同时也会显示函数调用中各参数的值。</li></ul><p>2、count()</p><ul><li>可以把console.count()放在一个方法内，每次调用都会加1，更好显示方法被调用了多少次。</li></ul><p>3、time()和timeEnd()</p><ul><li>以ms为单位的时间，这两个要同时用，可以不写参数，输出的是，default：** ms</li><li>如果加了参数，参数要一致console.time(“count”);否则会报错，输出的是，count：** ms<br><img src="https://img-blog.csdn.net/20180518151944943?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NfY2xpZmZ0b3A=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="Time_Img"></li></ul><p>4、assert()</p><ul><li>一般两个参数，前面的是表达式，后面是要输出的内容，如果表达式为false，则输出<br><img src="https://img-blog.csdn.net/20180518152252454?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NfY2xpZmZ0b3A=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="Assert_Img"></li></ul><p>5、clear()</p><ul><li>清空console的输出信息。</li></ul><p>6、dir()</p><ul><li>使输出内容格式化更易读，而且也会输出一个对象的全部属性和方法。</li></ul><p>7、table()</p><ul><li>数组格式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//var table = [</span><br><span class="line">//     &#123;&quot;name&quot;: &quot;小猪佩奇&quot;, &quot;sex&quot;: &quot;F&quot;&#125;,</span><br><span class="line">//     &#123;&quot;name&quot;: &quot;小狗丹尼&quot;, &quot;sex&quot;: &quot;M&quot;&#125;,</span><br><span class="line">//     &#123;&quot;name&quot;: &quot;小猫坎迪&quot;, &quot;sex&quot;: &quot;F&quot;&#125;,</span><br><span class="line">//     &#123;&quot;name&quot;: &quot;小羊苏西&quot;, &quot;sex&quot;: &quot;F&quot;&#125;,</span><br><span class="line">//];</span><br><span class="line">//这个键不一定是字符串类型的</span><br><span class="line">var table = [</span><br><span class="line">      &#123;name: &quot;小猪佩奇&quot;, sex: &quot;F&quot;&#125;,</span><br><span class="line">      &#123;name: &quot;小狗丹尼&quot;, sex: &quot;M&quot;&#125;,</span><br><span class="line">      &#123;name: &quot;小猫坎迪&quot;, sex: &quot;F&quot;&#125;,</span><br><span class="line">      &#123;name: &quot;小羊苏西&quot;, sex: &quot;F&quot;&#125;</span><br><span class="line">];</span><br><span class="line">console.table(table);</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img-blog.csdn.net/20180518154850793?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NfY2xpZmZ0b3A=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="Table_Img">S</p><ul><li>对象格式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var table = &#123;</span><br><span class="line">     &quot;一&quot;: &#123;&quot;name&quot;: &quot;小猪佩奇&quot;, &quot;sex&quot;: &quot;F&quot;&#125;,</span><br><span class="line">     &quot;二&quot;: &#123;&quot;name&quot;: &quot;小狗丹尼&quot;, &quot;sex&quot;: &quot;M&quot;&#125;,</span><br><span class="line">     &quot;三&quot;: &#123;&quot;name&quot;: &quot;小猫坎迪&quot;, &quot;sex&quot;: &quot;F&quot;&#125;,</span><br><span class="line">     &quot;四&quot;: &#123;&quot;name&quot;: &quot;小羊苏西&quot;, &quot;sex&quot;: &quot;F&quot;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">console.log(table);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdn.net/20180518160653320?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NfY2xpZmZ0b3A=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="Table2_Img"><br> <hr></p><p>其他还有几个，用的不多，不，因为我不用，所以我就不写，任性。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;先说一下console，JavaScript 原生中默认是没有 Console 对象,这是某些浏览器提供的内置对象。&lt;br&gt;在不同的浏览器里显示可能不同&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;h2 id=&quot;log-、info-、warn-、error-区别&quot;&gt;&lt;a href=&quot;#log-、info-、warn-、error-区别&quot; class=&quot;headerlink&quot; title=&quot;log()、info()、warn()、error()区别&quot;&gt;&lt;/a&gt;log()、info()、warn()、error()区别&lt;/h2&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://www.sclifftop.com/tags/js/"/>
    
      <category term="console方法" scheme="https://www.sclifftop.com/tags/console%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>eui.Scroller 怎么禁止左右或上下滑动</title>
    <link href="https://www.sclifftop.com/2017/12/19/eui-Scroller-%E6%80%8E%E4%B9%88%E7%A6%81%E6%AD%A2%E5%B7%A6%E5%8F%B3%E6%88%96%E4%B8%8A%E4%B8%8B%E6%BB%91%E5%8A%A8/"/>
    <id>https://www.sclifftop.com/2017/12/19/eui-Scroller-怎么禁止左右或上下滑动/</id>
    <published>2017-12-19T02:53:38.000Z</published>
    <updated>2018-05-31T12:57:58.000Z</updated>
    
    <content type="html"><![CDATA[<hr><p>eui.Scroller 怎么禁止左右或上下滑动</p><hr><p>方法：</p><a id="more"></a><ul><li><p>scrollPolicyH设为off，表示水平方向不可滚动，且不显示滚动条</p></li><li><p>scrollPolicyV设为off，表示垂直方向不可滚动，且不显示滚动条<br><br></p></li></ul><p><hr><br> <br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;p&gt;eui.Scroller 怎么禁止左右或上下滑动&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;方法：&lt;/p&gt;
    
    </summary>
    
    
      <category term="eui.Scroller" scheme="https://www.sclifftop.com/tags/eui-Scroller/"/>
    
      <category term="禁止滑动" scheme="https://www.sclifftop.com/tags/%E7%A6%81%E6%AD%A2%E6%BB%91%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap Table 选中某几行，获取其数据</title>
    <link href="https://www.sclifftop.com/2017/12/16/Bootstrap-Table-%E9%80%89%E4%B8%AD%E6%9F%90%E5%87%A0%E8%A1%8C%EF%BC%8C%E8%8E%B7%E5%8F%96%E5%85%B6%E6%95%B0%E6%8D%AE/"/>
    <id>https://www.sclifftop.com/2017/12/16/Bootstrap-Table-选中某几行，获取其数据/</id>
    <published>2017-12-16T11:55:40.000Z</published>
    <updated>2018-06-12T12:18:56.000Z</updated>
    
    <content type="html"><![CDATA[<hr><p>Bootstrap Table 获取选中某几行的数据</p><p><hr><br>如下图所示，怎样选择任意行，求其和或干其他坏事，(图片有码高清，数据被我隐藏了，看方法就好)<br><br><br><img src="http://img.blog.csdn.net/20171216165158807?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvU19jbGlmZnRvcA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="选择的表"><br><br><br>点击上面“获取选中月份总量”按钮，弹出下面的界面，div什么的我不用说了吧<br></p><a id="more"></a><p><img src="http://img.blog.csdn.net/20171216165217394?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvU19jbGlmZnRvcA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="获取的表"></p><p><hr><br>下面是实现方法：<br><br><br>1、想要选择任意行（只想选一行，用onClick就行了，底部有另一篇），得先有复选框，复选框是bootstrap table组件自带的，有在表中和js中显示的两种方法：</p><ul><li>方法一</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div class=&quot;form-group panel-margin-top&quot;&gt;</span><br><span class="line">    &lt;table id=&quot;monthCount_Table&quot; style=&quot;color: black;font-weight: 550; font-size: small;&quot;  class=&quot;table table-bordered&quot;&gt;</span><br><span class="line">        &lt;thead&gt;</span><br><span class="line">            &lt;tr style=&quot;font-size: 10px;&quot;&gt;</span><br><span class="line">            &lt;!--如果你用的是属性,只需加如下这句，表示在第一列显示复选框--!&gt;</span><br><span class="line">              &lt;th data-checkbox=&quot;true&quot;&gt;&lt;/th&gt; </span><br><span class="line">                      .</span><br><span class="line">                      .</span><br><span class="line">                      .                     </span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/thead&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">     &lt;/table&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#monthCount_Table&quot;).bootstrapTable(&#123;</span><br><span class="line">            search: true,</span><br><span class="line">            pagination: true,</span><br><span class="line">            pageSize: 15,</span><br><span class="line">            pageList: [5, 10, 15, 20],</span><br><span class="line">            showColumns: true,</span><br><span class="line">            showRefresh: true,</span><br><span class="line">            showToggle: true,</span><br><span class="line">            sortable: true,</span><br><span class="line">            locale: &quot;zh-CN&quot;,</span><br><span class="line">            clickToSelect: true,</span><br><span class="line">            //只需加入下面这个checkbox，就会在第一列显示复选框</span><br><span class="line">            columns:[</span><br><span class="line">            &#123;</span><br><span class="line">          checkbox: true  </span><br><span class="line">            &#125;，&#123;</span><br><span class="line">          field: &apos;theDate&apos;,</span><br><span class="line">                  title: &apos;日期&apos;</span><br><span class="line">            &#125;</span><br><span class="line">                .</span><br><span class="line">                .</span><br><span class="line">                .</span><br><span class="line">                .</span><br><span class="line">            ]</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><ul><li>别忘加clickToSelect，这个设为true表示点击一行时，自动选中或取消第一列复选框<br><br></li></ul><p>2、有了复选框，就可以选择想要的行，接下来就是如何获取数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//使用getSelections即可获得，row是json格式的数据</span><br><span class="line">var getSelectRows = $(&quot;#monthCount_Table&quot;).bootstrapTable(&apos;getSelections&apos;, function (row) &#123;</span><br><span class="line">          return row;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3、有了数据，就好办了，可以干任何事，下面的是获取选中月份之和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">//自定义给表格赋值的方法，json就是getSelectRows，调用 showTableData(getSelectRows); 即可</span><br><span class="line">function showTableData(json) &#123;</span><br><span class="line">            $(&quot;#get_sum_table&quot;).bootstrapTable(&apos;removeAll&apos;);</span><br><span class="line">            tableData = [];</span><br><span class="line">            var newUserNum = 0;</span><br><span class="line">            .</span><br><span class="line">            .</span><br><span class="line">            .</span><br><span class="line">            for (var i = 0; i &lt; json.length; i++) &#123;</span><br><span class="line">            //从存在的表中取的数据，字段名不是服务端发来的字段了，是上一个表data-field的字段名，不要搞错了</span><br><span class="line">            //这只是获得所选月的总量，所以只有一条数据，先算所选的几个月的和，再push</span><br><span class="line">            newUserNum+=json[i].userNum;</span><br><span class="line">                   .</span><br><span class="line">                       .</span><br><span class="line">                       .</span><br><span class="line">            &#125;</span><br><span class="line">            tableData.push(&#123;</span><br><span class="line">                active_num: activeUserNum,</span><br><span class="line">                       .</span><br><span class="line">                       .</span><br><span class="line">                       .</span><br><span class="line">            &#125;)</span><br><span class="line">            tableData.reverse();</span><br><span class="line">            //这是第二个表的id，就不写出来了</span><br><span class="line">            $(&quot;#get_sum_table&quot;).bootstrapTable(&apos;append&apos;, tableData);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>4、显示div什么的那些不重要，只需要记住这个方法，可以看本篇底部的中文API，有几个类似的getAllSelections等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#table&quot;).bootstrapTable(&apos;getSelections&apos;,param);</span><br></pre></td></tr></table></figure><p><br></p><p><hr><br>其他相关：</p><ul><li><a href="http://blog.csdn.net/S_clifftop/article/details/77937356" target="_blank">BootstrapTable API 中文版</a></li><li><a href="http://blog.csdn.net/s_clifftop/article/details/77744791" target="_blank">Bootstrap Table实现定时刷新数据</a></li><li><a href="http://blog.csdn.net/s_clifftop/article/details/77915934" target="_blank">Bootstrap Table 双击或单击行获取该行内容</a></li></ul><p><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;p&gt;Bootstrap Table 获取选中某几行的数据&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;&lt;br&gt;如下图所示，怎样选择任意行，求其和或干其他坏事，(图片有码高清，数据被我隐藏了，看方法就好)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171216165158807?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvU19jbGlmZnRvcA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;选择的表&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;点击上面“获取选中月份总量”按钮，弹出下面的界面，div什么的我不用说了吧&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="bootstrap-table" scheme="https://www.sclifftop.com/tags/bootstrap-table/"/>
    
      <category term="jQuery" scheme="https://www.sclifftop.com/tags/jQuery/"/>
    
      <category term="获取表多行数据" scheme="https://www.sclifftop.com/tags/%E8%8E%B7%E5%8F%96%E8%A1%A8%E5%A4%9A%E8%A1%8C%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序 — 怎么获得view中的文本、id等等</title>
    <link href="https://www.sclifftop.com/2017/11/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E2%80%94-%E6%80%8E%E4%B9%88%E8%8E%B7%E5%BE%97view%E4%B8%AD%E7%9A%84%E6%96%87%E6%9C%AC%E3%80%81id%E7%AD%89%E7%AD%89/"/>
    <id>https://www.sclifftop.com/2017/11/03/微信小程序-—-怎么获得view中的文本、id等等/</id>
    <published>2017-11-03T11:43:03.000Z</published>
    <updated>2018-05-31T13:04:12.000Z</updated>
    
    <content type="html"><![CDATA[<hr><p>微信小程序-怎么获得view中的文本、id等等？</p><hr><p>取id很简单，取text两种情形，分开来说，先说第一个：</p><p>一、通过自定义data-text获取与定义一样的文本</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- index.wxml --&gt;</span><br><span class="line">&lt;view id=&quot;outer&quot; catchtap=&apos;pressView&apos;&gt;</span><br><span class="line">  &lt;view class=&quot;top&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;clear&quot; id=&quot;clear&quot; data-text=&quot;C&quot;&gt;C&lt;/view&gt; &lt;!-- 那个data-text就是你自定义的 --&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//index.js</span><br><span class="line">Page(&#123;</span><br><span class="line"></span><br><span class="line">  pressView: function (e) &#123;</span><br><span class="line">    var viewId = e.target.id;</span><br><span class="line">    var viewDataSet = e.target.dataset;</span><br><span class="line">    var viewText = viewDataSet.text;</span><br><span class="line">    console.log(viewId); //输出点击的view的id，第二种情况就不重复写了</span><br><span class="line">console.log(viewText); //输出该文本</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>解释一下：</p><ol><li><p>首先，一个组件（如<code>&lt;view&gt;&lt;/view&gt;</code>)包括开始和结束标签，属性是来修饰这个组件，内容是在两个标签之内，一般会一点html的都知道，我啰嗦一下。</p></li><li><p>然后，组件都会有共有属性，微信小程序语言也不例外，它的共有属性如下：</p></li></ol><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id、 class、style、 hidden这些都不用解释了，html也有。</span><br><span class="line">bind* 、 catch*：这两个是触发事件，此处用到了catch*，只要点击view就会触发执行。</span><br><span class="line">data-*：这个是自定义属性，你可以随意定义，如data-text，然后给他赋值，就相当于html组件input的value。</span><br></pre></td></tr></table></figure></code></pre><ol start="3"><li>然后就用上面的方法用 <code>e.target.dataset.text</code>即可获得text，如果你定义的是<code>data-g</code>，通过<code>e.target.dataset.g</code>也是可以取出来的，不过这样写就有点皮，尽量符合常规取名规则<br><br><br></li></ol><p><hr><br>二、通过this.data获取view文本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- index2.wxml --&gt;</span><br><span class="line">&lt;!-- 这是我临时写的一点，button用view代替，没差，主要知道怎么获取就好 --&gt;</span><br><span class="line">&lt;view id=&quot;outer&quot; catchtap=&apos;pressView&apos;&gt;</span><br><span class="line">  &lt;view class=&quot;top&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;temp&quot; id=&quot;temp&quot; &gt;&#123;&#123;tempText&#125;&#125;&lt;/view&gt; </span><br><span class="line">    &lt;view class=&quot;click&quot; id=&quot;click&quot; &gt;获取上一个view文本&lt;/view&gt; </span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//index2.js</span><br><span class="line">Page(&#123;</span><br><span class="line"> data: &#123;</span><br><span class="line">    tempText: &quot;Sclifftop~&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  pressView: function (e) &#123;</span><br><span class="line">    var viewText=this.data.tempText; </span><br><span class="line">    console.log(viewText); //获取上一个view的文本，不需要自定义data-*了</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>解释一下：</p><ol><li><p>初始是给tempText赋值为”Sclifftop~”, 然后点击”获取上一个view文本”，控制台输出Sclifftop~。</p></li><li><p>没错，获取文本的方式就是<code>this.data.tempText</code>，想获取哪个就在那个地方加“占位符<code></code>”，通过<code>T</code> 获取</p></li></ol><p><hr><br>很简单的事，不懂就看API，还看不懂找一些Demo对比着看，其实就是HTML+CSS+JS，部分名称长得不一样罢了，没差<br><br></p><p><hr><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;p&gt;微信小程序-怎么获得view中的文本、id等等？&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;取id很简单，取text两种情形，分开来说，先说第一个：&lt;/p&gt;
&lt;p&gt;一、通过自定义data-text获取与定义一样的文本&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://www.sclifftop.com/tags/js/"/>
    
      <category term="微信小程序" scheme="https://www.sclifftop.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="wxml" scheme="https://www.sclifftop.com/tags/wxml/"/>
    
  </entry>
  
  <entry>
    <title>typescript中的module和export</title>
    <link href="https://www.sclifftop.com/2017/09/19/typescript%E4%B8%AD%E7%9A%84module%E5%92%8Cexport/"/>
    <id>https://www.sclifftop.com/2017/09/19/typescript中的module和export/</id>
    <published>2017-09-19T01:59:38.000Z</published>
    <updated>2018-05-31T13:00:44.000Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>我们在使用egret的时候，调用egret中的类都是要加上egret.XXX或者egret.gui.XXX的。 这是为何呢？仔细看一下egret的源码会发现， egret中的定义的所有类都是这样的格式：</p></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">module egret &#123;</span><br><span class="line">    export class XXX &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>假如是gui模块,那么源码中的类module后面的就是egret.gui。 RES模块中的类module是RES。那么这里的关键词module到底是干嘛的?</p><hr><p>1、module大致的意思就是模块。</p><p> 一个模块中有若干类，假如我写了两个类都叫 A 。那怎么区分呢，那么就使用这个module关键词将这两个类定义在不同模块就行了。module还有一个作用也是主要作用就是将一些不同特征的的类区分开。 比如 egret里面有几大模块，核心模块叫 egret ， gui模块叫 egret.gui，RES模块就叫RES ， dragonBones模块叫dragonBones。 这些模块就是按功能划分的，一个模块负责一些特定的功能。</p><p>再比较一下as3中package关键词与module的不同。as3中一般一个类在哪个文件夹下，那这个类的package就是这个相对于src文件夹的名字，这样就不用担心不同文件夹下有名称相同的类而无法区分了。ts中module与类所在的文件夹无关，可能不同文件夹下的类都是一个module，一个文件夹下的类是不同module(这种情况最好不要出现)。 从某种角度来说，module的概念包括了package。你完全可以把某一个文件夹下的类定义的module定义成相对于src文件夹的名字就和as3的package是一样的。不过不推荐这种做法，这样会书写不便，引用每一个类都要加上module名前缀。</p><p>2、回过来解释为什么我们要加上egret.XXX来调用egret里面的类。 </p><p>因为通常情况下，我们定义类都是这样写的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">class XXX &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们不会为自己的游戏所写的类加上module这个关键词，所以我们通常使用的是默认模块，这样就和egret不在一个模块了，所以要调用egret中类就要加上egret.XXX。</p><p>在一个module下的不同类之间的相互调用不需要加模块名。比如 egret这个模块中有很多类但是在egret的源码中你几乎看不到egret.XXX这样的调用，因为他们都是在一个模块下。 同理假如你写了个类module是egret，那这个类调用egret里面的类也不需要加egret前缀了。但是不建议这样做，因为模块的核心用法就是定义一组相同特征的类。</p><p>子模块定义。我们可以查看egret中GUI的源码，发现GUI中的类module名都是egret.gui。这个gui就是egret的子模块了。 在子模块中调用父模块的类也是不需要加前缀的。比如egret.gui中的类调用egret中的类是不需要加egret前缀的。 在父模块中调用子模块只需要加上相对于父模块的模块名就行了。比如egret中的类调用egret.gui中的类使用gui.XXX。</p><p>3、关于export的用法。 </p><p>在使用module时定义一个类需要在前面加上export关键词。表示在这个模块中导入了这个类(在默认模块下不需要加export)。也可以不加但是不加的话这个类是无法在这个文件外部访问的，相当与内部类。另外export还可以用于function。这些用法的一个典型的例子就是RES模块中， 我们通常会使用RES.getRes(XXX)来获取资源，好像这是一个叫RES类的静态方法，其实不然。搜索下发现根本就没有RES这个类，RES是模块名，getRes是RES模块下的一个方法。代码在Resource.ts文件中，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export function getRes(key:string):any&#123;</span><br><span class="line">    return instance.getRes(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以export也可以用于导入方法。同理 egret.setTimeout这类的方法都是使用export导入的方法 。再来看上述例子中的 instance 实际上是Resource这个类的一个实例，只不过这个类是一个内部类。可以看到在Resource.ts是这样定义的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">class Resource extends egret.EventDispatcher&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里没用使用export关键词，这样外界就无法访问这个类，这个类只在内部使用很好的封装起来了。这是一个很好的用法。</p><p>总之module就是定义了一组相同特征的类。在官方Egret的1.0.3版本中将GUI中的类全部改为egret.gui.XXX，这个改变看似很无理，本来一个按钮是egret.Button这样写，但是要改成egret.gui.Button，书写不便了。但是这样是合理的，就是因为这是一个单独的模块。需要从egret模块中隔离出来。 以上就是module的主要用法了。</p><hr><p>原文：<a href="http://bbs.egret.com/thread-736-1-1.html" target="_blank" rel="noopener">关于TypeScript中的module和export关键词</a></p><p><hr><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;我们在使用egret的时候，调用egret中的类都是要加上egret.XXX或者egret.gui.XXX的。 这是为何呢？仔细看一下egret的源码会发现， egret中的定义的所有类都是这样的格式：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module egret &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    export class XXX &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ts" scheme="https://www.sclifftop.com/tags/ts/"/>
    
      <category term="module" scheme="https://www.sclifftop.com/tags/module/"/>
    
      <category term="export" scheme="https://www.sclifftop.com/tags/export/"/>
    
  </entry>
  
  <entry>
    <title>eui.Button改变文本、背景色及是否可点击</title>
    <link href="https://www.sclifftop.com/2017/09/05/eui-Button%E6%94%B9%E5%8F%98%E6%96%87%E6%9C%AC%E3%80%81%E8%83%8C%E6%99%AF%E8%89%B2%E5%8F%8A%E6%98%AF%E5%90%A6%E5%8F%AF%E7%82%B9%E5%87%BB/"/>
    <id>https://www.sclifftop.com/2017/09/05/eui-Button改变文本、背景色及是否可点击/</id>
    <published>2017-09-05T06:09:04.000Z</published>
    <updated>2018-05-31T12:57:38.000Z</updated>
    
    <content type="html"><![CDATA[<hr><p>如何改变按钮的文本、背景及点击状态？</p><hr><p>方法：<br>1、改变按钮的文本</p><ul><li>只需要设置<code>(&lt;eui.Button&gt;this[&quot;btnGo&quot;]).label = &quot;要改变的内容&quot;;</code></li></ul><p>2、改变按钮的背景</p><a id="more"></a><ul><li>可以设置背景图，利用查找skinName位置通过egret.getDefinitionByName(skinName)来改变，如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//自定义获取图片路径的方法</span><br><span class="line">function getEuiBgPath(skinName: string):string&#123;</span><br><span class="line">if(egret.getDefinitionByName(skinName))&#123;</span><br><span class="line">return skinName;</span><br><span class="line">&#125;</span><br><span class="line">return &quot;相对路径&quot;+skinName+&quot;.exml&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//调用上面的方法，改变背景</span><br><span class="line">var btnSkinName=&quot;图片名称&quot;;</span><br><span class="line">(&lt;eui.Button&gt;this[&quot;btnGo&quot;]).skinName = getEuiBgPath(btnSkinName);</span><br></pre></td></tr></table></figure><p> 3、改变按钮是否可点击</p><ul><li>只需要设置<code>(&lt;eui.Button&gt;this[&quot;btnGo&quot;]).enabled = true/false;</code></li></ul><p>4、按钮是否显示</p><ul><li><code>(&lt;eui.Button&gt;this[&quot;btnGo&quot;]).visible = true/false;</code></li></ul><hr><p>如上。</p><hr><p>没了。<br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;p&gt;如何改变按钮的文本、背景及点击状态？&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;方法：&lt;br&gt;1、改变按钮的文本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只需要设置&lt;code&gt;(&amp;lt;eui.Button&amp;gt;this[&amp;quot;btnGo&amp;quot;]).label = &amp;quot;要改变的内容&amp;quot;;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、改变按钮的背景&lt;/p&gt;
    
    </summary>
    
    
      <category term="eui.Button" scheme="https://www.sclifftop.com/tags/eui-Button/"/>
    
      <category term="改变按钮状态" scheme="https://www.sclifftop.com/tags/%E6%94%B9%E5%8F%98%E6%8C%89%E9%92%AE%E7%8A%B6%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap Table实现定时刷新数据</title>
    <link href="https://www.sclifftop.com/2017/08/31/Bootstrap-Table%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E5%88%B7%E6%96%B0%E6%95%B0%E6%8D%AE/"/>
    <id>https://www.sclifftop.com/2017/08/31/Bootstrap-Table实现定时刷新数据/</id>
    <published>2017-08-31T10:33:45.000Z</published>
    <updated>2018-05-31T12:55:06.000Z</updated>
    
    <content type="html"><![CDATA[<hr><p>Bootstrap Table实现定时刷新数据</p><hr><p><strong><em>推荐第二种方法</em></strong></p><ul><li>令表格的id为realTimeTable</li></ul><p>1、毁掉表格，再查询数据后append，如果你查大量的数据（例如：查询很多渠道的信息），而获取服务器数据又太慢，你就会看到表格在一行一行的增加</p><ul><li>定时器，多长时间执行一次，自己定义，此处是30S</li></ul><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setInterval(function() &#123;</span><br><span class="line">queryAll();</span><br><span class="line">&#125;, 30000);</span><br></pre></td></tr></table></figure><ul><li>先定义一个函数，里面放入查询的方法updateRealTimeData和你所自定义使用的方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function queryAll() &#123;</span><br><span class="line">updateRealTimeData();</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法updateRealTimeData</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function updateRealTimeData() &#123;</span><br><span class="line">if(errorFlag || appid == -1) return;</span><br><span class="line">//把表格的tbody移除，不然后面会一直添加</span><br><span class="line">$(&quot;#realTimeTable&quot;).bootstrapTable(&apos;removeAll&apos;);</span><br><span class="line">//获取数据</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">data: &#123;</span><br><span class="line">//向服务器发送的一些参数，像日期，游戏ID什么的</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;,</span><br><span class="line">type: &quot;post&quot;,</span><br><span class="line">//url不用说了吧，否则不知道向服务器哪个接口发送并请求</span><br><span class="line">url: *******,</span><br><span class="line">async: true,</span><br><span class="line">//超时时间</span><br><span class="line">timeout:30000,</span><br><span class="line">success: function(msg) &#123;</span><br><span class="line">if(msg.code == &apos;1&apos;) &#123;</span><br><span class="line">//定义的函数实现对表格赋值，自定义想传的参数，但别忘了msg，不然搞个屁</span><br><span class="line">showTableData(msg，……);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法showTableData</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function showTableData(msg，……) &#123;</span><br><span class="line">      tableData = [];</span><br><span class="line">          for(var i = 0; i &lt; json.length; i++) &#123;</span><br><span class="line">                tableData.push(&#123;</span><br><span class="line">                //这里也就是data-field的名称，getDate是服务器返回的字段名</span><br><span class="line">                    date: json[i].getDate,</span><br><span class="line">                   .</span><br><span class="line">                   .</span><br><span class="line">                   .</span><br><span class="line">                   .</span><br><span class="line">                &#125;)</span><br><span class="line">                //数组反向排列，看情况使用</span><br><span class="line">                tableData.reverse();</span><br><span class="line">                //向tbody里面添加数据</span><br><span class="line">                $(&quot;#realTimeTable&quot;).bootstrapTable(&apos;append&apos;, tableData);</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、使用updateRow方法</p><ul><li><p>首先，得存在表格，里面有数据，才能更新行，否则没作用。此方法不会像上面的方法表格消失再增加，这个是整体不变，里面的数据会自动更新</p><hr></li><li><p>定时器，和上面一样，多长时间执行一次，自己定义，此处是30S</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setInterval(function() &#123;</span><br><span class="line">queryAll();</span><br><span class="line">for (var j = 0; j &lt; 请求的数据的总条数（也就等于表格的行数）; j++) &#123;</span><br><span class="line">                changeAllChannelRealTime(j, .....);</span><br><span class="line">            &#125;</span><br><span class="line">&#125;, 30000);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">function changeAllChannelRealTime(j, .....) &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            data: &#123;</span><br><span class="line">//向服务器发送的一些参数，像日期，游戏ID什么的</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;,</span><br><span class="line">type: &quot;post&quot;,</span><br><span class="line">//url不用说了吧，否则不知道向服务器哪个接口发送并请求</span><br><span class="line">url: *******,</span><br><span class="line">async: true,</span><br><span class="line">//超时时间</span><br><span class="line">timeout:30000,</span><br><span class="line">success: function(msg) &#123;</span><br><span class="line">               if (msg.code == &apos;1&apos;) &#123;</span><br><span class="line">                    changeData(j, msg, .....);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: function () &#123;</span><br><span class="line">                msgToast.error(&quot;查询数据出错&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function changeData(i,msg,......)&#123;</span><br><span class="line">$(&apos;#realTime_Table&apos;).bootstrapTable(&apos;updateRow&apos;, &#123;</span><br><span class="line">            //i表示第几行，从0开始</span><br><span class="line">            index: i,</span><br><span class="line">            row: &#123;</span><br><span class="line">                //这里也就是data-field的名称,*表示字段名</span><br><span class="line">                date: msg.*</span><br><span class="line">                .</span><br><span class="line">                .</span><br><span class="line">                .</span><br><span class="line">                .</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>先空着。</p><p><hr><br><br>其他相关：</p><ul><li>BootstrapTable API 中文版   <a href="http://blog.csdn.net/S_clifftop/article/details/77937356" target="_blank" rel="noopener">http://blog.csdn.net/S_clifftop/article/details/77937356</a></li><li>Bootstrap Table 双击或单击行获取该行内容  <a href="http://blog.csdn.net/S_clifftop/article/details/77915934" target="_blank" rel="noopener">http://blog.csdn.net/S_clifftop/article/details/77915934</a></li></ul><p><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;p&gt;Bootstrap Table实现定时刷新数据&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;推荐第二种方法&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;令表格的id为realTimeTable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1、毁掉表格，再查询数据后append，如果你查大量的数据（例如：查询很多渠道的信息），而获取服务器数据又太慢，你就会看到表格在一行一行的增加&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定时器，多长时间执行一次，自己定义，此处是30S&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="bootstrap-table" scheme="https://www.sclifftop.com/tags/bootstrap-table/"/>
    
      <category term="jQuery" scheme="https://www.sclifftop.com/tags/jQuery/"/>
    
      <category term="定时刷新" scheme="https://www.sclifftop.com/tags/%E5%AE%9A%E6%97%B6%E5%88%B7%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用typescript和egret wing3开发简单的单机五子棋游戏</title>
    <link href="https://www.sclifftop.com/2017/08/29/%E4%BD%BF%E7%94%A8typescript%E5%92%8Cegret-wing3%E5%BC%80%E5%8F%91%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E6%9C%BA%E4%BA%94%E5%AD%90%E6%A3%8B%E6%B8%B8%E6%88%8F/"/>
    <id>https://www.sclifftop.com/2017/08/29/使用typescript和egret-wing3开发简单的单机五子棋游戏/</id>
    <published>2017-08-29T00:14:19.000Z</published>
    <updated>2018-05-31T13:04:54.000Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>前几天学了微软开发的Typescript，这种语言是用面向对象的思想来写，可以使用tsc编译为js代码，既然学了就用一下，配合egret引擎（基于Html5的开发引擎）及egret wing3做一个十分基本的小游戏练下手，我也是新手，给一些更新的新手参考一下，有错误和建议可以提出来，谢谢。</p></blockquote><hr><ul><li><p>基本的链接：</p><ul><li>Node.js：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a>  。</li><li>Ts下载及API：<a href="https://www.tslang.cn/" target="_blank" rel="noopener">https://www.tslang.cn/</a> 。</li><li>egret引擎及egret wing3下载页面：<a href="https://www.egret.com/index" target="_blank" rel="noopener">https://www.egret.com/index</a> 。</li><li>egret API：<a href="http://developer.egret.com/cn/apidoc/" target="_blank" rel="noopener">http://developer.egret.com/cn/apidoc/</a> 。<hr></li></ul><p>看到这说明你已经了解Ts及如何使用egret wing3了，那么基本的语法就不用说了，你看你长得那么聪明，下面开始介绍项目。</p><a id="more"></a><p>1、使用egret wing3新建一个egret游戏项目，项目名暂且叫GoBang，项目简单，里面很多文件不用去看，只要记住根目录下的index.html是主页面，其中：</p><ul><li>data-entry-class=”Main” 设置项目的入口文件，表示项目的入口类，默认为Main,如果需要自定义的话需要在项目中先创建类，然后在这里配置类的名字。</li><li>data-orientation=”auto” 设置旋转模式。</li><li>data-scale-mode=”showAll” 设置缩放模式。</li><li>data-frame-rate=”30” 这里是运行的帧率。</li><li>data-content-width=”480” 和 data-content-height=”800” 用来设置舞台的设计宽和高</li><li>data-show-paint-rect=”false” 设置显示脏矩形的重绘区域。</li><li>data-multi-fingered=”2” 设置多指触摸</li><li>data-show-fps=”false” data-show-log=”false” 这里设置显示帧率和log，只有在调试时会显示，发布的版本会去掉。</li><li>data-log-filter=” “ 设置一个正则表达式过滤条件，日志文本匹配这个正则表达式的时候才显示这条日志。如 data-log-filter=”^egret” 表示仅显示以 egret 开头的日志。</li><li>data-show-fps-style=”x:0,y:0,size:30,textColor:0x00c200,bgAlpha:0.9” 这里设置fps面板的样式。目前支持默认的这几种设置，修改其值即可，比如修改面板位置可以设置x和y,改变大小可以设置size,改变文字颜色textColor，改变背景面板的透明度bgAlpha。</li></ul></li></ul><p>2、</p><ul><li>在src源文件目录下建一个文件夹，里面新建3个文件：DrawChessBs.ts，DrawChessMen.ts，GoBangPlaying.ts，分别表示画棋盘的类，画棋子的类，用于对棋盘和棋子加载并实现下棋逻辑的类。</li><li>src目录下有两个文件：LoadingUI.ts和Main.ts，前一个看名字就知道，这里先不用管，后面的名字正是<br>index.html的data-entry-class设置的入口类，可以随意改变，这里默认。</li><li>其余json什么的加载和配置文件本项目用不着，均不用看。</li></ul><p>3、下面放上代码以供参考</p><pre><code>注:    编译运行后,修改index.html div的属性，&quot;data-content-width&quot;和&quot;data-content-height&quot;均修改为800，再次刷新页面，否则页面会加载不全</code></pre><p><br></p><ul><li>index.html：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!--index.html--&gt;</span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Egret&lt;/title&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;full-screen&quot; content=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;360-fullscreen&quot; content=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        html, body &#123;</span><br><span class="line">            -ms-touch-action: none;</span><br><span class="line">            background: #888888;</span><br><span class="line">            padding: 0;</span><br><span class="line">            border: 0;</span><br><span class="line">            margin: 0;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--看似很多，但都是文件自动生成的，本项目只要注意&quot;data-content-width&quot;，和&quot;data-content-height&quot;，均改为800即可--&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div style=&quot;margin: auto;width: 100%;height: 100%;&quot; class=&quot;egret-player&quot;</span><br><span class="line">         data-entry-class=&quot;Main&quot;</span><br><span class="line">         data-orientation=&quot;auto&quot;</span><br><span class="line">         data-scale-mode=&quot;showAll&quot;</span><br><span class="line">         data-frame-rate=&quot;30&quot;</span><br><span class="line">         data-content-width=&quot;800&quot;</span><br><span class="line">         data-content-height=&quot;800&quot;</span><br><span class="line">         data-show-paint-rect=&quot;false&quot;</span><br><span class="line">         data-multi-fingered=&quot;2&quot;</span><br><span class="line">         data-show-fps=&quot;false&quot; data-show-log=&quot;false&quot;</span><br><span class="line">         data-show-fps-style=&quot;x:0,y:0,size:12,textColor:0xffffff,bgAlpha:0.9&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var loadScript = function (list, callback) &#123;</span><br><span class="line">        var loaded = 0;</span><br><span class="line">        var loadNext = function () &#123;</span><br><span class="line">            loadSingleScript(list[loaded], function () &#123;</span><br><span class="line">                loaded++;</span><br><span class="line">                if (loaded &gt;= list.length) &#123;</span><br><span class="line">                    callback();</span><br><span class="line">                &#125;</span><br><span class="line">                else &#123;</span><br><span class="line">                    loadNext();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        loadNext();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var loadSingleScript = function (src, callback) &#123;</span><br><span class="line">        var s = document.createElement(&apos;script&apos;);</span><br><span class="line">        s.async = false;</span><br><span class="line">        s.src = src;</span><br><span class="line">        s.addEventListener(&apos;load&apos;, function () &#123;</span><br><span class="line">            s.parentNode.removeChild(s);</span><br><span class="line">            s.removeEventListener(&apos;load&apos;, arguments.callee, false);</span><br><span class="line">            callback();</span><br><span class="line">        &#125;, false);</span><br><span class="line">        document.body.appendChild(s);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var xhr = new XMLHttpRequest();</span><br><span class="line">    xhr.open(&apos;GET&apos;, &apos;./manifest.json?v=&apos; + Math.random(), true);</span><br><span class="line">    xhr.addEventListener(&quot;load&quot;, function () &#123;</span><br><span class="line">        var manifest = JSON.parse(xhr.response);</span><br><span class="line">        var list = manifest.initial.concat(manifest.game);</span><br><span class="line">        loadScript(list, function () &#123;</span><br><span class="line">            /**</span><br><span class="line">             * &#123;</span><br><span class="line">             * &quot;renderMode&quot;:, //引擎渲染模式，&quot;canvas&quot; 或者 &quot;webgl&quot;</span><br><span class="line">             * &quot;audioType&quot;: 0 //使用的音频类型，0:默认，2:web audio，3:audio</span><br><span class="line">             * &quot;antialias&quot;: //WebGL模式下是否开启抗锯齿，true:开启，false:关闭，默认为false</span><br><span class="line">             * &quot;retina&quot;: //是否基于devicePixelRatio缩放画布</span><br><span class="line">             * &#125;</span><br><span class="line">             **/</span><br><span class="line">            egret.runEgret(&#123; renderMode: &quot;webgl&quot;, audioType: 0 &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    xhr.send(null);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><br><br></p><ul><li>Main.ts</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * author：Sclifftop</span><br><span class="line"> * date：17.8.1</span><br><span class="line"> * project：GoBang</span><br><span class="line"> * FileName：Main.ts</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //Main.ts上面是新建文件时自动生成的，有加载图片资源等方法，不用管，只要拉到最后修改一下createGameScenee()即可，如下：</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 创建游戏场景</span><br><span class="line">     * Create a game scene</span><br><span class="line">     */</span><br><span class="line">    private createGameScene() &#123;</span><br><span class="line"></span><br><span class="line">       //棋盘的所有操作</span><br><span class="line">       let gbp:GoBangPlaying=new GoBangPlaying();</span><br><span class="line">       this.addChild(gbp);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><br><br></p><ul><li>DrawChessBs.ts</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * author：Sclifftop</span><br><span class="line"> * date：17.8.1</span><br><span class="line"> * project：GoBang</span><br><span class="line"> * FileName：DrawChessBs.ts</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">class DrawChessBs extends egret.DisplayObjectContainer&#123;</span><br><span class="line"></span><br><span class="line">    //棋盘长和宽</span><br><span class="line">     private CLENGTH:number=785;</span><br><span class="line">     //棋盘左上角开始的位置</span><br><span class="line">     private BEGINPOSITION:number=15;</span><br><span class="line">     //每个棋盘格的长度</span><br><span class="line">     private RECTLENGTH:number=35;</span><br><span class="line">     //每个点开始的格位置</span><br><span class="line">     private POINTBEGINPN:number=3;</span><br><span class="line">     //点增量</span><br><span class="line">     private POINTSTEP:number=8;</span><br><span class="line">    public constructor()&#123;</span><br><span class="line">        super();</span><br><span class="line">        this.addEventListener(egret.Event.ADDED_TO_STAGE,this.setBg,this);</span><br><span class="line">        this.addEventListener(egret.Event.ADDED_TO_STAGE,this.drawLine,this);</span><br><span class="line">        this.addEventListener(egret.Event.ADDED_TO_STAGE,this.drawFourLc,this);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private setBg()&#123;</span><br><span class="line">        //设置背景</span><br><span class="line">        var bg:egret.Shape=new egret.Shape();</span><br><span class="line">        bg.graphics.beginFill(0xDDDDDD);</span><br><span class="line">        bg.graphics.drawRect(0,0,this.stage.stageWidth,this.stage.stageHeight);</span><br><span class="line">        bg.graphics.endFill();</span><br><span class="line">        //添加至页面</span><br><span class="line">        this.addChild(bg);</span><br><span class="line">    &#125;</span><br><span class="line">    //画棋盘线</span><br><span class="line">    private drawLine(event:egret.Event)&#123;</span><br><span class="line">       let bg:egret.Shape=new egret.Shape();</span><br><span class="line">       bg.graphics.lineStyle(2,0x999999);</span><br><span class="line">         for(let i=0;i&lt;Math.ceil(this.CLENGTH/this.RECTLENGTH);i++)&#123;</span><br><span class="line">                bg.graphics.moveTo(this.BEGINPOSITION+i*this.RECTLENGTH,this.BEGINPOSITION);</span><br><span class="line">                bg.graphics.lineTo(this.BEGINPOSITION+i*this.RECTLENGTH,this.CLENGTH);</span><br><span class="line">                bg.graphics.moveTo(this.BEGINPOSITION,this.BEGINPOSITION+i*this.RECTLENGTH);</span><br><span class="line">                bg.graphics.lineTo(this.CLENGTH,this.BEGINPOSITION+i*this.RECTLENGTH);</span><br><span class="line">            &#125;</span><br><span class="line">       bg.graphics.endFill();</span><br><span class="line">       this.addChild(bg);</span><br><span class="line">    &#125;</span><br><span class="line">    //画五个点，用于确定位置</span><br><span class="line">    private drawFourLc(event:egret.Event)&#123;</span><br><span class="line">        let flO:egret.Shape=new egret.Shape();</span><br><span class="line">        let flT:egret.Shape=new egret.Shape();</span><br><span class="line">        for(let i=this.POINTBEGINPN;i&lt;Math.ceil(this.CLENGTH/this.RECTLENGTH);i+=this.POINTSTEP)&#123;</span><br><span class="line">            flO.graphics.beginFill(0x888888,1);</span><br><span class="line">            flO.graphics.drawCircle(this.BEGINPOSITION+i*this.RECTLENGTH,this.BEGINPOSITION+i*this.RECTLENGTH,4);</span><br><span class="line">            flT.graphics.beginFill(0x888888,1);</span><br><span class="line">            flT.graphics.drawCircle(this.BEGINPOSITION+i*this.RECTLENGTH,this.CLENGTH-i*this.RECTLENGTH,4);</span><br><span class="line">        &#125;</span><br><span class="line">        flO.graphics.endFill();</span><br><span class="line">        flT.graphics.endFill();</span><br><span class="line">        this.addChild(flO);</span><br><span class="line">        this.addChild(flT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><ul><li>DrawChessMen.ts</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * author：Sclifftop</span><br><span class="line"> * date：17.8.1</span><br><span class="line"> * project：GoBang</span><br><span class="line"> * FileName：DrawChessMen.ts</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">class DrawChessMen extends egret.DisplayObjectContainer&#123;</span><br><span class="line"></span><br><span class="line">    //棋子颜色</span><br><span class="line">    private CHESSMENCOLOR:number=0;</span><br><span class="line">    //棋子半径</span><br><span class="line">    private CHESSMENRADIUS:number=15;</span><br><span class="line">    //棋子透明度</span><br><span class="line">    private CHESSALP:number=0.2;</span><br><span class="line">    public constructor()&#123;</span><br><span class="line">        super();</span><br><span class="line">    &#125;</span><br><span class="line">    public drawChessMen(x:number,y:number,k:number)&#123;</span><br><span class="line">        let chess:egret.Shape=new egret.Shape();</span><br><span class="line">        //0黑棋1白棋</span><br><span class="line">        if(k==1)&#123;</span><br><span class="line">            this.CHESSMENCOLOR=0xffffff;</span><br><span class="line">        &#125;else if(k==0)&#123;</span><br><span class="line">             this.CHESSMENCOLOR=0x000000;</span><br><span class="line">        &#125;</span><br><span class="line">        for(let i=0;i&lt;this.CHESSMENRADIUS;i++)&#123;</span><br><span class="line">            chess.graphics.beginFill(this.CHESSMENCOLOR,this.CHESSALP);</span><br><span class="line">            chess.graphics.drawCircle(x,y,i+1);</span><br><span class="line">        &#125;</span><br><span class="line">        chess.graphics.endFill();</span><br><span class="line">        this.addChild(chess);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><ul><li>GoBangPlaying.ts</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * author：Sclifftop</span><br><span class="line"> * date：17.8.1</span><br><span class="line"> * project：GoBang</span><br><span class="line"> * FileName：GoBangPlaying.ts</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class GoBangPlaying extends egret.DisplayObjectContainer&#123;</span><br><span class="line"></span><br><span class="line">        //左上角开始位置</span><br><span class="line">        private STARTPOSITION:number=15;</span><br><span class="line">        private ENDPOSITION:number=785;</span><br><span class="line">         //每个棋盘格的长度</span><br><span class="line">        private RECTLENGTH:number=35;</span><br><span class="line">        //表示棋子的编号:1是白,0是黑,0先手</span><br><span class="line">        private CHESSMENINDEX:number=0;</span><br><span class="line">        //表示点击的次数</span><br><span class="line">        private CLICKNUM:number=1;</span><br><span class="line">        //新建数组,用于存储棋子的位置</span><br><span class="line">         private arr:number[][]=new Array();</span><br><span class="line">        //标志棋子的输赢</span><br><span class="line">        private flag:number=0;</span><br><span class="line">        private chessMenString:string=&quot;&quot;;</span><br><span class="line">        private dcm:DrawChessMen=new DrawChessMen();</span><br><span class="line">        public constructor()&#123;</span><br><span class="line">            super();</span><br><span class="line">            //初始化二维数组</span><br><span class="line">            this.iniArray();</span><br><span class="line">            //画棋盘</span><br><span class="line">            let db:DrawChessBs=new DrawChessBs();</span><br><span class="line">            this.addChild(db);</span><br><span class="line">            </span><br><span class="line">            this.touchEnabled=true;</span><br><span class="line">            this.addEventListener(egret.TouchEvent.TOUCH_TAP,this.selectChessMen,this);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        //根据点击判断选择棋盘位置并下对应的棋</span><br><span class="line">        private selectChessMen(evt:egret.TouchEvent)&#123;</span><br><span class="line"></span><br><span class="line">            let clickX=evt.stageX;</span><br><span class="line">            let clickY=evt.stageY;</span><br><span class="line">            </span><br><span class="line">            //点击的位置不能小于&amp;&amp;不能大于,否则无效</span><br><span class="line">            if((clickX&gt;=(this.STARTPOSITION-8)&amp;&amp;clickY&gt;=(this.STARTPOSITION-8))&amp;&amp;(clickX&lt;=(this.ENDPOSITION+4)&amp;&amp;clickY&lt;=(this.ENDPOSITION+4)))&#123;</span><br><span class="line">                </span><br><span class="line">                console.log(this.getPosition(clickX),this.getPosition(clickY));</span><br><span class="line">                //若该位没有棋子,可以放置</span><br><span class="line">                if(this.arr[this.getPosition(clickX)][this.getPosition(clickY)]==2)&#123;</span><br><span class="line">                    this.dcm.drawChessMen(this.getInt(clickX),this.getInt(clickY),this.CHESSMENINDEX,);</span><br><span class="line">                    //棋子放下后,则改变标志位</span><br><span class="line">                    if(this.CHESSMENINDEX==1)</span><br><span class="line">                        this.arr[this.getPosition(clickX)][this.getPosition(clickY)]=1;</span><br><span class="line">                    else</span><br><span class="line">                        this.arr[this.getPosition(clickX)][this.getPosition(clickY)]=0;</span><br><span class="line">                    this.judgeAndResult(this.getPosition(clickX),this.getPosition(clickY),this.CHESSMENINDEX);</span><br><span class="line">                    console.log(&quot;-----------已下了&quot;+this.CLICKNUM+&quot;颗棋子------------&quot;);</span><br><span class="line">                    //自增</span><br><span class="line">                    this.CLICKNUM++;</span><br><span class="line">                   </span><br><span class="line">                &#125;</span><br><span class="line">                // console.log(&quot;arr&quot;+this.arr[this.getPosition(clickX)][this.getPosition(clickY)]);</span><br><span class="line">                  if(this.CLICKNUM%2==0)&#123;</span><br><span class="line">                        this.CHESSMENINDEX=1;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        this.CHESSMENINDEX=0;</span><br><span class="line">                    &#125;</span><br><span class="line">                this.addChild(this.dcm);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                window.alert(&quot;您好,不能在此位置放置棋子&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        //用于计算所在的格子位数</span><br><span class="line">        private getPosition(d:number)&#123;</span><br><span class="line">            return Math.round((d-this.STARTPOSITION)/this.RECTLENGTH)+1;</span><br><span class="line">        &#125;</span><br><span class="line">        //封装为方法,用于计算出点击的位置</span><br><span class="line">        private getInt(t:number)&#123;</span><br><span class="line">            return this.STARTPOSITION+Math.round((t-this.STARTPOSITION)/this.RECTLENGTH)*35;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        //判断棋子情况</span><br><span class="line">        private judgeAndResult( x:number, y:number,chessIndex:number) &#123;</span><br><span class="line"></span><br><span class="line">            //水平方向</span><br><span class="line">            let horizontalDirection:number=0;</span><br><span class="line">            //垂直方向</span><br><span class="line">            let verticalDirection:number=0;</span><br><span class="line">            //左上&lt;=&gt;右下</span><br><span class="line">            let leftObliqueDirection:number=0;</span><br><span class="line">            //右上&lt;=&gt;左下</span><br><span class="line">            let rightObliqueDirection:number=0;</span><br><span class="line">             for (let i = x; i &gt;= 0; i--) &#123;</span><br><span class="line">                 if (this.arr[i][y] != chessIndex) &#123;</span><br><span class="line">                        break;</span><br><span class="line">            &#125;</span><br><span class="line">                horizontalDirection++;</span><br><span class="line">            &#125;</span><br><span class="line">             for (let i = x + 1; i &lt; 23; i++) &#123;</span><br><span class="line">                 if (this.arr[i][y] != chessIndex) &#123;</span><br><span class="line">                     break;</span><br><span class="line">            &#125;</span><br><span class="line">                horizontalDirection++;</span><br><span class="line">            &#125;</span><br><span class="line">            for (let i = y; i &gt;= 0; i--) &#123;</span><br><span class="line">                if (this.arr[x][i] != chessIndex) &#123;</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">                verticalDirection++;</span><br><span class="line">            &#125;</span><br><span class="line">            for (let i = y + 1; i &lt; 23; i++) &#123;</span><br><span class="line">                 if (this.arr[x][i] != chessIndex) &#123;</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">                verticalDirection++;</span><br><span class="line">            &#125;</span><br><span class="line">            for (let i = x, j = y; i&gt;=0&amp;&amp;j &gt;= 0; i--, j--) &#123;</span><br><span class="line">                if (i &lt; 0 || j &lt; 0 || this.arr[i][j] != chessIndex) &#123;</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">                 leftObliqueDirection++;</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">            for (let i = x + 1, j = y + 1; i &lt; 23&amp;&amp; j &lt; 23; i++, j++) &#123;</span><br><span class="line">                if (i &gt;= 23 || j &gt;= 23 || this.arr[i][j] != chessIndex) &#123;</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">                leftObliqueDirection++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            for (let i = x, j = y; i &gt;= 0&amp;&amp;j &lt; 23; i--, j++) &#123;</span><br><span class="line">                 if (i &lt; 0 || j &gt;= 15 || this.arr[i][j] != chessIndex) &#123;</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">                rightObliqueDirection++;</span><br><span class="line">            &#125;</span><br><span class="line">             for (var i = x + 1,    j = y - 1; i &lt;23&amp;&amp;j &gt;= 0; i++, j--) &#123;</span><br><span class="line">                if (i &gt;= 23 || j &lt; 0 || this.arr[i][j] != chessIndex) &#123;</span><br><span class="line">                     break;</span><br><span class="line">            &#125;</span><br><span class="line">                rightObliqueDirection++;</span><br><span class="line">            &#125;</span><br><span class="line">             if (horizontalDirection &gt;= 5 || verticalDirection &gt;= 5 || leftObliqueDirection &gt;= 5 || rightObliqueDirection &gt;= 5) &#123;</span><br><span class="line">                     if (chessIndex==0) &#123; </span><br><span class="line">                         this.flag=21;</span><br><span class="line">                &#125; else if (chessIndex==1) &#123; </span><br><span class="line">                        this.flag=20;</span><br><span class="line">            &#125;</span><br><span class="line">            if(this.flag==20)&#123;</span><br><span class="line">                    this.chessMenString=&quot;白&quot;;</span><br><span class="line">                    this.iniParam(this.flag,this.chessMenString);</span><br><span class="line">                &#125;else if(this.flag==21)&#123;</span><br><span class="line">                    this.chessMenString=&quot;黑&quot;</span><br><span class="line">                    this.iniParam(this.flag,this.chessMenString);</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        //初始化数组</span><br><span class="line">        private iniArray()&#123;</span><br><span class="line">                for(let j=0;j&lt;30;j++)&#123;</span><br><span class="line">                        this.arr.push([2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]);</span><br><span class="line">                    &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //输出信息,并重新开始一局</span><br><span class="line">        private iniParam(f:number,chessMenS:string)&#123;</span><br><span class="line">            window.alert(chessMenS+&quot;子胜利,请点击&apos;确定&apos;按钮以重新开始一局&quot;);</span><br><span class="line">            this.flag=0;</span><br><span class="line">            this.iniArray();</span><br><span class="line">            //清除所有棋子,重新开始</span><br><span class="line">            // 可以使用chess.graphics.clear();来清除所有棋子</span><br><span class="line">            //没有使用清除,更简单地刷新当前页面</span><br><span class="line">            window.location.reload();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、截图：</p><p><br><br></p><ul><li>基本的棋盘界面：</li></ul><p><img src="http://img.blog.csdn.net/20170801174929922?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvU19jbGlmZnRvcA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="基本棋盘"><br><br><br></p><ul><li>下棋界面：</li></ul><p><img src="http://img.blog.csdn.net/20170801175025225?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvU19jbGlmZnRvcA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="下棋界面"></p><p><br><br></p><ul><li>赢棋界面：和上面一样，就是多个提示框，略。</li></ul><p>5、项目很简单，倒不如说很基本，没做计时（当然就没做暂停）、没有做选择下棋顺序，默认黑子先手、没有做与电脑对奕、连个按钮都没有，不过一天做完，功能以后开发本地联机版再添加，就这样。</p><hr><pre><code>附：======================================================================================================项目:          GoBang;项目描述:    五子棋;游戏方法:    黑棋先手,若任意方向棋子率先连成五个以上则赢得本局,若一方赢得本局,则重开,进行新一轮的游戏;======================================================================================================硬件:         pc机;OS:             win 7 64位;浏览器:        推荐Chrome内核;因为有控制台输出信息;======================================================================================================index.html:            主页面;Main.ts:            主类,用于实现对资源加载和游戏场景的创建;DrawChessBs.ts:        用于画棋盘的类;DrawChessMen.ts:    用于画棋子的类;GoBangPlaying.ts:    用于对棋盘和棋子加载并实现下棋逻辑的类;======================================================================================================</code></pre><hr><p>最后，我还想说两句，但不知道该说什么，那就算了。<br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;前几天学了微软开发的Typescript，这种语言是用面向对象的思想来写，可以使用tsc编译为js代码，既然学了就用一下，配合egret引擎（基于Html5的开发引擎）及egret wing3做一个十分基本的小游戏练下手，我也是新手，给一些更新的新手参考一下，有错误和建议可以提出来，谢谢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;基本的链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node.js：&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nodejs.org/en/&lt;/a&gt;  。&lt;/li&gt;
&lt;li&gt;Ts下载及API：&lt;a href=&quot;https://www.tslang.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.tslang.cn/&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;egret引擎及egret wing3下载页面：&lt;a href=&quot;https://www.egret.com/index&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.egret.com/index&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;egret API：&lt;a href=&quot;http://developer.egret.com/cn/apidoc/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://developer.egret.com/cn/apidoc/&lt;/a&gt; 。&lt;hr&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看到这说明你已经了解Ts及如何使用egret wing3了，那么基本的语法就不用说了，你看你长得那么聪明，下面开始介绍项目。&lt;/p&gt;
    
    </summary>
    
    
      <category term="html" scheme="https://www.sclifftop.com/tags/html/"/>
    
      <category term="ts" scheme="https://www.sclifftop.com/tags/ts/"/>
    
      <category term="网页对战五子棋" scheme="https://www.sclifftop.com/tags/%E7%BD%91%E9%A1%B5%E5%AF%B9%E6%88%98%E4%BA%94%E5%AD%90%E6%A3%8B/"/>
    
      <category term="egret wing 3" scheme="https://www.sclifftop.com/tags/egret-wing-3/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap Table API 中文版(完整翻译文档)</title>
    <link href="https://www.sclifftop.com/2017/08/25/Bootstrap-Table-API-%E4%B8%AD%E6%96%87%E7%89%88-%E5%AE%8C%E6%95%B4%E7%BF%BB%E8%AF%91%E6%96%87%E6%A1%A3/"/>
    <id>https://www.sclifftop.com/2017/08/25/Bootstrap-Table-API-中文版-完整翻译文档/</id>
    <published>2017-08-25T03:26:01.000Z</published>
    <updated>2018-05-31T12:53:14.000Z</updated>
    
    <content type="html"><![CDATA[<hr><p>Bootstrap Table API 完整翻译文档</p><hr><blockquote><p>$(‘#table’).bootstrapTable({});<br>看网上有中文版的，但有些就是字面直接译过来了，而且有的就没有翻译，那就打算自己再翻译一遍，每一条会尽<br>最大可能结合尽可能多资料翻译，如果发现译的内容比英文多，是添加了更详细的说明，表的名称，属性，类型，<br>默认值不翻译，例如：”class”、”id”等不翻译。<br>有错请提出，会及时改正，谢谢。<br>Bootstrap table 中文文档（完整翻译文档）如果想转请注明@Sclifftop</p></blockquote><hr><ul><li>“名称”可以写在<code>$(&#39;#table&#39;).bootstrapTable({});</code>的大括号中，可以定义一些想要的值，如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#realTime_Table&quot;).bootstrapTable(&#123;</span><br><span class="line">       search: true,</span><br><span class="line">            pagination: false,</span><br><span class="line">            pageSize: 15,</span><br><span class="line">            pageList: [5, 10, 15, 20],</span><br><span class="line">            showColumns: true,</span><br><span class="line">            showRefresh: false,</span><br><span class="line">            showToggle: true,</span><br><span class="line">            locale: &quot;zh-CN&quot;,</span><br><span class="line">            striped: true</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>“属性”放在声明表内，如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--例子应该很好看懂Table options和Column options 所放的位置不同，随便写的，主要为了懂得如何用--!&gt;</span><br><span class="line"></span><br><span class="line"> &lt;table id=&quot;realTime_Table&quot; data-click-to-select=&quot;true&quot; class=&quot;table table-bordered&quot; data-page-size=&quot;20&quot;&gt;</span><br><span class="line">      &lt;thead&gt;</span><br><span class="line">          &lt;tr &gt;</span><br><span class="line">              &lt;th data-sortable=&quot;true&quot; data-field=&quot;realTimeDate&quot;&gt;日期&lt;/th&gt;</span><br><span class="line">              &lt;th data-sortable=&quot;true&quot; data-field=&quot;newPlayerNum&quot;&gt;新增用户&lt;/th&gt;</span><br><span class="line">              &lt;th data-sortable=&quot;true&quot; data-field=&quot;activePlayerNum&quot;&gt;活跃用户&lt;/th&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">      &lt;/thead&gt;</span><br><span class="line">      &lt;tbody&gt;</span><br><span class="line">      &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><ul><li>如果名称和属性功能类似，则任意一个地方就够了，不用重复定义，有的属性写在js里比名称写在声明表中更为简单，or vice verse（有的属性必须要写，对应的名称只是表示是否启用那个属性）</li></ul><p><hr></p><h2 id="表的各项-Table-options"><a href="#表的各项-Table-options" class="headerlink" title="表的各项(Table options )"></a>表的各项(Table options )</h2><blockquote><p>定义在  <em>jQuery.fn.bootstrapTable.defaults</em>  文件内</p></blockquote><table><thead><tr><th>名称</th><th>属性</th><th>类型</th><th>默认值</th><th>作用描述</th></tr></thead><tbody><tr><td>-</td><td>data-toggle</td><td>String</td><td>table</td><td>只要引入 jquery、bootstrap 、bootstrap-table的包，不用在js里面定义就可以使用 默认有写data-toggle=”table”,data-toggle应该知道吧，常用的有”tooltip、popover等等”，这边就不说了</td></tr><tr><td>classes</td><td>data-classes</td><td>String</td><td>table table-hover</td><td>表的class属性，如果没有自己定义，则默认有边框，并且当鼠标悬浮在那一行，背景会变为浅灰色.</td></tr><tr><td>sortClass</td><td>data-sort-class</td><td>String</td><td>undefined</td><td>声明表格td的class名，代表此列元素的class名将被排序</td></tr><tr><td>height</td><td>data-height</td><td>Number</td><td>undefined</td><td>表格的高度</td></tr><tr><td>undefinedText</td><td>data-undefined-text</td><td>String</td><td>-</td><td>当不写任何内容默认显示’-‘</td></tr><tr><td>striped</td><td>data-striped</td><td>Boolean</td><td>false</td><td>默认false，当设为true，则每行表格的背景会显示灰白相间</td></tr><tr><td>sortName</td><td>data-sort-name</td><td>String</td><td>undefined</td><td>定义哪一列的值会被排序，写data-field的自定义名，没定义默认都不排列，同下面的sortOrder结合使用，没写的话列默认递增（asc）</td></tr><tr><td>sortOrder</td><td>data-sort-order</td><td>String</td><td>asc</td><td>同上面的结合使用，默认递增（asc），也可设为递减（desc）</td></tr><tr><td>sortStable</td><td>data-sort-stable</td><td>Boolean</td><td>false</td><td>（别看错了，是sortStable，sortable在下面）默认false，设为true，则和sort部分一样，区别是：在排序过程中，如果存在相等的元素，则原来的顺序不会改变。原文还有一句：（如果你把此属性设为了true）我们将为此行添加’_position’属性</td></tr><tr><td>iconsPrefix</td><td>data-icons-prefix</td><td>String</td><td>glyphicon</td><td>定义字体库 (‘Glyphicon’ or ‘fa’ for FontAwesome),使用”fa”时需引用 FontAwesome，并且配合 icons 属性实现效果 Glyphicon 集成于Bootstrap可免费使用</td></tr><tr><td>iconSize</td><td>data-icon-size</td><td>String</td><td>undefined</td><td>定义的图标大小：       - undefined =&gt;默认表示默认的按钮尺寸（btn）       - xs   =&gt;超小按钮的尺寸（btn-xs）       - sm  =&gt;小按钮的尺寸（btn-sm）       - lg    =&gt;大按钮的尺寸（btn-lg）</td></tr><tr><td>buttonsClass</td><td>data-buttons-class</td><td>String</td><td>default</td><td>按钮的类，默认为default。       - 可选的有：primary、danger、warning等等       - 写了之后会自动转换为btn-primary（蓝色）、btn-danger（红色）、btn-warning（黄色）等格式，所以前面不要再加”btn-“，默认为btn-default（白色）       - 参考菜鸟教程：<a href="http://www.runoob.com/bootstrap/bootstrap-buttons.html" target="_blank" rel="noopener">Bootstrap 按钮</a></td></tr><tr><td>icons</td><td>data-icons</td><td>Object</td><td><code>{ paginationSwitchDown: ‘glyphicon-collapse-down icon-chevron-down’, paginationSwitchUp: ‘glyphicon-collapse-up icon-chevron-up’, refresh: ‘glyphicon-refresh icon-refresh’, toggle: ‘glyphicon-list-alt icon-list-alt’, columns: ‘glyphicon-th icon-th’, detailOpen: ‘glyphicon-plus icon-plus’, detailClose: ‘glyphicon-minus icon-minus’ }</code></td><td>定义在工具栏、分页、详细视图中使用的图标       - 没办法解释，请参考菜鸟教程的图标：<a href="http://www.runoob.com/bootstrap/bootstrap-glyphicons.html" target="_blank" rel="noopener">Bootstrap 字体图标</a></td></tr><tr><td>columns</td><td>-</td><td>Array</td><td>[]</td><td>默认空数组，在JS里面定义，field即data-field，title就是每列表头名等等。       - 请参考：<a href="http://bootstrap-table.wenzhixin.net.cn/getting-started/" target="_blank" rel="noopener">点击Bootstrap-table的右侧边栏Usage</a></td></tr><tr><td>data</td><td>-</td><td>Array</td><td>[]</td><td>被加载的数据。       - 也就是从服务器获取的数据，通过”.”运算符获取，例如”data.date/data.anything”，后面是服务器发来的字段名</td></tr><tr><td>dataField</td><td>data-data-field</td><td>String</td><td>rows</td><td>- 名称写自己定义的每列的字段名，也就是key，通过key才能给某行的某列赋value。       - 原文：获取每行数据json内的key       - 例如：{“name”:”zz”,”age”:20}，name和age就是key，如果这是从服务端请求的json，那可能和每列定义的字段不同，但都是唯一的</td></tr><tr><td>ajax</td><td>data-ajax</td><td>Function</td><td>undefined</td><td>- ajax方法，和jQuery的ajax方法类似       - 参考 <a href="http://blog.csdn.net/s_clifftop/article/details/77744791" target="_blank" rel="noopener">BootstrapTable实现定时刷新数据</a>，只是参考，因为那是jQuery的ajax方法</td></tr><tr><td>method</td><td>data-method</td><td>String</td><td>get</td><td>向服务器请求远程数据的方式，默认为’get’，可选’post’</td></tr><tr><td>url</td><td>data-url</td><td>String</td><td>undefined</td><td>向服务器请求的url。       - 例如：server + “get_app_player”和server + ‘get_channel_list’，两者都是向server（server是自己定义的，例如”<a href="http://kanshakan.nichousha.com/”）请求数据，只是接口不同，一个是请求该游戏玩家信息，一个是请求渠道信息" target="_blank" rel="noopener">http://kanshakan.nichousha.com/”）请求数据，只是接口不同，一个是请求该游戏玩家信息，一个是请求渠道信息</a> 下面看看原文：       - 向远程站点请求数据的URL       - 请记住，如果服务端分页选项使用了自定义的，那么请求的服务器响应格式是不同的，参考下面两个数据格式：       <a href="https://github.com/wenzhixin/bootstrap-table-examples/blob/master/json" target="_blank" rel="noopener">Without server-side pagination（没有启用服务端分页 - data1.json）</a>       <a href="https://github.com/wenzhixin/bootstrap-table-examples/blob/master/json" target="_blank" rel="noopener">With server-side pagination（启用服务端分页 - data2.json）</a></td></tr><tr><td>cache</td><td>data-cache</td><td>Boolean</td><td>true</td><td>默认缓存ajax请求，设为false则禁用缓存</td></tr><tr><td>contentType</td><td>data-content-type</td><td>String</td><td>application/json</td><td>请求数据的contentType（内容类型），用于定义文件的类型，决定接收方以什么形式读取这个文件。       - 默认application/json，用来告诉接收端从服务器发来的消息是序列化后的json字符串</td></tr><tr><td>dataType</td><td>data-data-type</td><td>String</td><td>json</td><td>期望从服务器获取的数据的类型，默认为json格式字符串</td></tr><tr><td>ajaxOptions</td><td>data-ajax-options</td><td>Object</td><td>{}</td><td>向服务器请求ajax时的附加项，默认无附加       - 参考 <a href="http://api.jquery.com/jQuery.ajax" target="_blank" rel="noopener">jQuery.ajax()</a></td></tr><tr><td>queryParams</td><td>data-query-params</td><td>Function</td><td><code>function(params){return params;}</code></td><td>当请求数据时，你可以通过修改queryParams向服务器发送其余的参数。        - queryParamsType=”limit”，它的参数包括：limit，offset，search，sort，order Else        - params包括：pageSize，pageNumber，searchText，sortName，sortOrder       - 当return false，请求则终止</td></tr><tr><td>queryParamsType</td><td>data-query-params-type</td><td>String</td><td>limit</td><td>默认”limit”，设置该属性用来发送符合RESTful格式的参数</td></tr><tr><td>responseHandler</td><td>data-response-handler</td><td>Function</td><td><code>function(res){return res;}</code></td><td>在加载服务器发送来的数据之前，处理数据的格式，参数res表示the response data（获取的数据）</td></tr><tr><td>pagination</td><td>data-pagination</td><td>Boolean</td><td>false</td><td>默认为false，表格的底部工具栏不会显示分页条（pagination toolbar），可以设为true来显示</td></tr><tr><td>paginationLoop</td><td>data-pagination-loop</td><td>Boolean</td><td>true</td><td>默认true，分页条无限循环</td></tr><tr><td>onlyInfoPagination</td><td>data-only-info-pagination</td><td>Boolean</td><td>false</td><td>前提：pagination设为true，启用了分页功能。       - 默认false，设为true显示总记录数</td></tr><tr><td>sidePagination</td><td>data-side-pagination</td><td>String</td><td>client</td><td>设置在哪进行分页，默认”client”，可选”server”，如果设置 “server”，则必须设置url或者重写ajax方法       - 请记住，如果服务端分页选项使用了自定义的，那么请求的服务器响应格式是不同的，参考下面两个数据格式：       <a href="https://github.com/wenzhixin/bootstrap-table-examples/blob/master/json/data1.json" target="_blank" rel="noopener">Without server-side pagination（没有启用服务端分页）</a>       <a href="https://github.com/wenzhixin/bootstrap-table-examples/blob/master/json/data2.json" target="_blank" rel="noopener">With server-side pagination（启用服务端分页）</a></td></tr><tr><td>pageNumber</td><td>data-page-number</td><td>Number</td><td>1</td><td>前提：pagination设为true，启用了分页功能。       - 默认第1页，用于设置初始的页数</td></tr><tr><td>pageSize</td><td>data-page-size</td><td>Number</td><td>10</td><td>前提：pagination设为true，启用了分页功能。       - 默认每页显示10条记录，用于设置每页初始显示的条数</td></tr><tr><td>pageList</td><td>data-page-list</td><td>Array</td><td>[10, 25, 50, 100]</td><td>前提：pagination设为true，启用了分页功能。       - 默认为[10, 25, 50, 100]，即可以选择”每页显示10/25/50/100条记录”，用于设置选择每页显示的条数</td></tr><tr><td>selectItemName</td><td>data-select-item-name</td><td>String</td><td>btSelectItem</td><td>radio（单选按钮）或checkbox（复选框）的字段名</td></tr><tr><td>smartDisplay</td><td>data-smart-display</td><td>Boolean</td><td>true</td><td>默认为true，会 <del>机智地（&lt;_&lt;）</del> 根据情况显示分页（pagination）或卡片视图（card view）</td></tr><tr><td>escape</td><td>data-escape</td><td>Boolean</td><td>false</td><td>跳过插入HTML中的字符串，替换掉特殊字符（后面符号没有逗号）：&amp;，&lt;，&gt;，”，`，’</td></tr><tr><td>search</td><td>data-search</td><td>Boolean</td><td>false</td><td>默认false不显示表格右上方搜索框 ，可设为true，在搜索框内只要输入内容即开始搜索</td></tr><tr><td>searchOnEnterKey</td><td>data-search-on-enter-key</td><td>Boolean</td><td>false</td><td>默认false不启用，设为true启用，比功能是与上面相比，在搜索框内输入内容并且按下回车键才开始搜索</td></tr><tr><td>strictSearch</td><td>data-strict-search</td><td>Boolean</td><td>false</td><td>设为true，开启精确搜索</td></tr><tr><td>searchText</td><td>data-search-text</td><td>String</td><td>“”</td><td>前提：search设为true，启用了搜索功能。       - 搜索框初始显示的内容，默认空字符串</td></tr><tr><td>searchTimeOut</td><td>data-search-time-out</td><td>Number</td><td>500</td><td>前提：search设为true，启用了搜索功能。       - 设置搜索文件的超时时间（原文：Set timeout for search fire，不知道是写错了还是我知识面太窄，”search fire”是什么意思，官方API错了？给我整蒙逼了）</td></tr><tr><td>trimOnSearch</td><td>data-trim-on-search</td><td>Boolean</td><td>true</td><td>默认true，自动忽略空格</td></tr><tr><td>showHeader</td><td>data-show-header</td><td>Boolean</td><td>true</td><td>默认为true显示表头，设为false隐藏</td></tr><tr><td>showFooter</td><td>data-show-footer</td><td>Boolean</td><td>false</td><td>默认为false隐藏表尾，设为true显示</td></tr><tr><td>showColumns</td><td>data-show-columns</td><td>Boolean</td><td>false</td><td>默认为false隐藏某列下拉菜单，设为true显示</td></tr><tr><td>showRefresh</td><td>data-show-refresh</td><td>Boolean</td><td>false</td><td>默认为false隐藏刷新按钮，设为true显示</td></tr><tr><td>showToggle</td><td>data-show-toggle</td><td>Boolean</td><td>false</td><td>默认为false隐藏视图切换按钮，设为true显示</td></tr><tr><td>showPaginationSwitch</td><td>data-show-pagination-switch</td><td>Boolean</td><td>false</td><td>默认为false隐藏每页数据条数选择，设为true显示</td></tr><tr><td>minimumCountColumns</td><td>data-minimum-count-columns</td><td>Number</td><td>1</td><td>每列的下拉菜单最小数</td></tr><tr><td>idField</td><td>data-id-field</td><td>String</td><td>undefined</td><td>表明哪个是字段是标识字段</td></tr><tr><td>uniqueId</td><td>data-unique-id</td><td>String</td><td>undefined</td><td>表明每行唯 一的标识符</td></tr><tr><td>cardView</td><td>data-card-view</td><td>Boolean</td><td>false</td><td>默认false，设为true显示card view（卡片视图）</td></tr><tr><td>detailView</td><td>data-card-view</td><td>Boolean</td><td>false</td><td>默认false，设为true显示detail view（细节视图）</td></tr><tr><td>detailFormatter</td><td>data-detail-formatter</td><td>Function</td><td>function(index, row, element){ return ”;}</td><td>前提：detailView设为true，启用了显示detail view。       - 用于格式化细节视图       - 返回一个字符串，通过第三个参数element直接添加到细节视图的cell（某一格）中，其中，element为目标cell的jQuery element</td></tr><tr><td>searchAlign</td><td>data-search-align</td><td>String</td><td>right</td><td>搜索框的位置，默认right（最右），可选left</td></tr><tr><td>buttonsAlign</td><td>data-buttons-align</td><td>String</td><td>right</td><td>工具栏按钮的位置，默认right（最右），可选left</td></tr><tr><td>toolbarAlign</td><td>data-toolbar-align</td><td>String</td><td>left</td><td>自定义工具栏的位置，默认right（最右），可选left</td></tr><tr><td>paginationVAlign</td><td>data-pagination-v-align</td><td>String</td><td>bottom</td><td>分页条垂直方向的位置，默认bottom（底部），可选top、both（顶部和底部均有分页条）</td></tr><tr><td>paginationHAlign</td><td>data-pagination-h-align</td><td>String</td><td>right</td><td>分页条水平方向的位置，默认right（最右），可选left</td></tr><tr><td>paginationDetailHAlign</td><td>data-pagination-detail-h-align</td><td>String</td><td>left</td><td>如果解译的话太长，举个例子，paginationDetail就是“显示第 1 到第 8 条记录，总共 15 条记录 每页显示 8 条记录”，默认left（最左），可选right</td></tr><tr><td>paginationPreText</td><td>data-pagination-pre-text</td><td>String</td><td>‹</td><td>还是举例子，如果你内容太多，底部最右边会显示：”‹ 1 2 3 4 5 ›”来选择页数，默认就是最左边那个符号，下同</td></tr><tr><td>paginationNextText</td><td>data-pagination-next-text</td><td>String</td><td>›</td><td>参考上面一条</td></tr><tr><td>clickToSelect</td><td>data-click-to-select</td><td>Boolean</td><td>false</td><td>默认false不响应，设为true则当点击此行的某处时，会自动选中此行的checkbox（复选框）或radiobox（单选按钮）</td></tr><tr><td>singleSelect</td><td>data-single-select</td><td>Boolean</td><td>false</td><td>默认false，设为true则允许复选框仅选择一行</td></tr><tr><td>toolbar</td><td>data-toolbar</td><td>String 、Node</td><td>undefined</td><td>jQuery的选择器，例如：#toolbar，.toolbar，或者是DOM 结点</td></tr><tr><td>checkboxHeader</td><td>data-checkbox-header</td><td>Boolean</td><td>true</td><td>如果你有声明复选框，默认显示表头行的全选复选框，设为false隐藏（就是表格第一行的不显示，从第二行往后都显示）</td></tr><tr><td>maintainSelected</td><td>data-maintain-selected</td><td>Boolean</td><td>false</td><td>设为true则保持被选的那一行的状态</td></tr><tr><td>sortable</td><td>data-sortable</td><td>Boolean</td><td>true</td><td>默认true，设为false禁用所有的行排列（也就是每列表头不会显示排序的按钮，这个需要在th声明data-sortable=”true”，写在js中只是启不启用）</td></tr><tr><td>slientSort</td><td>data-silent-sort</td><td>Boolean</td><td>true</td><td>前提：sidePagination设为server（服务端）       - 默认true，设为false则静默排序数据</td></tr><tr><td>rowStyle</td><td>data-row-style</td><td>Function</td><td>{}</td><td>改变某行的格式，需要两个参数：        - row：此行的数据        - index：此行的索引 支持classes和css，用法如下： function rowStyle(row, index){     return { classes: ‘text-nowrap another-class’, css: {“color”: “blue”, “font-size”: “50px”} }; }</td></tr><tr><td>rowAttributes</td><td>data-row-attributes</td><td>Function</td><td>{}</td><td>改变某行的属性，需要两个参数：        - row：此行的数据        - index：此行的索引 支持所有自定义的属性。</td></tr><tr><td>customSearch</td><td>data-custom-search</td><td>Function</td><td>$.noop</td><td>自定义搜索功能（用来代替自带的搜索功能），需要一个参数：        - text：想要搜索的内容 用法如下： function customSearch(text){      //必须使用’this.data’对数据进行过滤（filter the data，感觉这个词也不用译），不要使用’this.options.data’ }</td></tr><tr><td>customSort</td><td>data-custom-sort</td><td>Function</td><td>$.noop</td><td>自定义排序功能（用来代替自带的排序功能），需要两个参数（可以参考前面）：        - sortName：需要排序的那列        - sortOrder：排序方式 用法：和上面一样，不用担心，注释也一模一样</td></tr><tr><td>locale</td><td>data-locale</td><td>String</td><td>undefined</td><td>本地化（动词）。 本地化的文件必须被预加载，允许fallback（简单来说就是如果要使用的文件不可用，就可以用别的替代它，例如球场替补，没替补，如果有人受伤了，比赛不就废了），如果加载，将按如下顺序：        - 首先尝试加载的是指定的”本地化”文件        - 然后是’_’（下划线）写成’-‘（破折号），并且区域代码被大写的        - 然后是短区域代码（例如：用’fr’代替’fr-CA’）        - 最后使用的是剩下的本地化文件（当没有文件可加载则使用默认的） 如果剩余的undefined，或者是空字符，则使用最后一次使用的那个文件（当没有本地化文件可被加载，则使用自带的’en_US’）</td></tr><tr><td>footerStyle</td><td>data-footer-style</td><td>Function</td><td>{}</td><td>改变footer格式，需要两个参数：        - row：此行的数据        - index：此行的索引 支持classes和css，用法如下： function rowStyle(value，row, index){     return { css: { “font-weight”: “bold” } }; }</td></tr></tbody></table><hr><h2 id="列的各项（Column-options-）"><a href="#列的各项（Column-options-）" class="headerlink" title="列的各项（Column options ）"></a>列的各项（Column options ）</h2><blockquote><p>定义在  <em>jQuery.fn.bootstrapTable.columnDefaults</em>  文件内</p></blockquote><table><thead><tr><th>名称</th><th>属性</th><th>类型</th><th>默认值</th><th>作用描述</th></tr></thead><tbody><tr><td>radio</td><td>data-radio</td><td>Boolean</td><td>false</td><td>默认false不显示radio（单选按钮），设为true则显示，radio宽度是固定的</td></tr><tr><td>checkbox</td><td>data-checkbox</td><td>Boolean</td><td>false</td><td>默认false不显示checkbox（复选框），设为true则显示，checkbox的每列宽度已固定</td></tr><tr><td>field</td><td>data-field</td><td>String</td><td>undefined</td><td>是每列的字段名，不是表头所显示的名字，通过这个字段名可以给其赋值，相当于key，表内唯一</td></tr><tr><td>title</td><td>data-title</td><td>String</td><td>undefined</td><td>这个是表头所显示的名字，不唯一，如果你喜欢，可以把所有表头都设为相同的名字</td></tr><tr><td>titleTooltip</td><td>data-title-tooltip</td><td>String</td><td>undefined</td><td>当悬浮在某控件上，出现提示        - 参考 <a href="http://www.runoob.com/bootstrap/bootstrap-tooltip-plugin.html" target="_blank" rel="noopener">Bootstrap 提示工具（Tooltip）插件</a></td></tr><tr><td>class</td><td>class/data-class</td><td>String</td><td>undefined</td><td>没什么好说的，就是class</td></tr><tr><td>rowspan</td><td>rowspan/data-rowspan</td><td>Number</td><td>undefined</td><td>每格所占的行数</td></tr><tr><td>colspan</td><td>colspan/data-colspan</td><td>Number</td><td>undefined</td><td>每格所占的列数</td></tr><tr><td>align</td><td>data-align</td><td>String</td><td>undefined</td><td>每格内数据的对齐方式，有：left（靠左）、right（靠右）、center（居中）</td></tr><tr><td>halign</td><td>data-halign</td><td>String</td><td>undefined</td><td>table header（表头）的对齐方式，有：left（靠左）、right（靠右）、center（居中）</td></tr><tr><td>falign</td><td>data-falign</td><td>String</td><td>undefined</td><td>table footer（表脚，就这样译，任性，其实随便译啦，知道就好）的对齐方式，有：left（靠左）、right（靠右）、center（居中）</td></tr><tr><td>valign</td><td>data-valign</td><td>String</td><td>undefined</td><td>每格数据的对齐方式，有：top（靠上）、middle（居中）、bottom（靠下）</td></tr><tr><td>width</td><td>data-width</td><td>Number（单位：px或%）</td><td>undefined</td><td>每列的宽度。        - 如果没有自定义宽度，那么宽度会根据内容的宽度自适应。        - 如果表是左适应（left responsive）或者设置的宽度小于内容的宽度，那么，宽度还是会自适应（可以在class或其他的属性中使用 min-width 或 max-width）。        - 你也可以使用”%”作为单位，这样的话，bootstapTable将按百分比划分，如果你想使用”pixels（像素值）”，你可以只写数字（只要不加”%”，单位默认”px”，不嫌麻烦，或者想更清晰，你也可以加上”px”）</td></tr><tr><td>sortable</td><td>data-sortable</td><td>Boolean</td><td>false</td><td>默认false就默认显示，设为true则会被排序</td></tr><tr><td>order</td><td>data-order</td><td>String</td><td>asc</td><td>默认的排序方式为”asc（升序）”，也可以设为”desc（降序）”。        - 与上面的结合使用，不然都不让排序了，你还考虑什么升降。</td></tr><tr><td>visible</td><td>data-visible</td><td>Boolean</td><td>true</td><td>默认为true显示该列，设为false则隐藏该列。         - 还是很有用的，例如隐藏自定义index列，按某属性排序后会变乱，你可以读取某行的index来进行赋值</td></tr><tr><td>cardVisible</td><td>data-card-visible</td><td>Boolean</td><td>true</td><td>默认为true显示该列，设为false则隐藏。</td></tr><tr><td>switchable</td><td>data-switchable</td><td>Boolean</td><td>true</td><td>默认为true显示该列，设为false则禁用列项目的选项卡。</td></tr><tr><td>clickToSelect</td><td>data-click-to-select</td><td>Boolean</td><td>true</td><td>默认true不响应，设为false则当点击此行的某处时，不会自动选中此行的checkbox（复选框）或radiobox（单选按钮）</td></tr><tr><td>formatter</td><td>data-formatter</td><td>Function</td><td>undefined</td><td>需要此列的对象。         某格的数据转换函数，需要三个参数：           -value： field（字段名）           -row：行的数据           -index：行的（索引）index</td></tr><tr><td>footerFormatter</td><td>data-footer-formatter</td><td>Function</td><td>undefined</td><td>需要此列的对象。         某格的数据转换函数，需要一个参数：           -data： 所有行数据的数组         函数需要返回（return）footer某格内所要显示的字符串的格式，还要包括内容</td></tr><tr><td>events</td><td>data-events</td><td>Object</td><td>undefined</td><td>当某格使用formatter函数时，事件监听会响应，需要四个参数：           -event：jQuery事件（参考Events）。           - value：字段名           - row：行数据           - index：此行的index  举个例子：   <code>&lt;th .. data-events=”operateEvent”&gt; var operateEvents = {‘click .like’: function (e, value, row, index) {}};</code></td></tr><tr><td>sorter</td><td>data-sorter</td><td>Function</td><td>undefined</td><td>自定义的排序函数，实现本地排序，需要两个参数：           - a：第一个字段名           - b：第二个字段名</td></tr><tr><td>sortName</td><td>data-sort-name</td><td>String</td><td>undefined</td><td>除了表头默认的sort-name或列的字段名，还可以使用自定义的sort-name         对特殊情况说明：           - 一个列显示的内容或许是”html”代码，如：<b><span style="”color:red”">abc</span></b>，但是被排列的是html代码中的内容（content）：abc</td></tr><tr><td>cellStyle</td><td>data-cell-style</td><td>Function</td><td>undefined</td><td>对某格中显示样式（style）进行改变，需要三个函数：           - value：字段名           - row：行数据           - index：此行的index           - field：行的字段名 支持classes和css，用法如下：       function cellStyle(value, row, index, field) { return { classes: ‘text-nowrap another-class’, css: {“color”: “blue”, “font-size”: “50px”} }; }</td></tr><tr><td>searchable</td><td>data-searchable</td><td>Boolean</td><td>true</td><td>默认true，表示此列数据可被查询</td></tr><tr><td>searchFormatter</td><td>data-search-formatter</td><td>Boolean</td><td>true</td><td>默认true，可使用格式化的数据查询</td></tr><tr><td>escape</td><td>data-escape</td><td>Boolean</td><td>false</td><td>跳过插入HTML中的字符串，替换掉特殊字符（后面符号没有逗号）：&amp;，&lt;，&gt;，”，`，’</td></tr></tbody></table><p><hr></p><h2 id="事件（Events）"><a href="#事件（Events）" class="headerlink" title="事件（Events）"></a>事件（Events）</h2><blockquote><p>定义事件的格式：</p><p>$(‘#table’).bootstrapTable({<br>    onEventName: function (arg1, arg2, …) {<br>        // …<br>    } });</p><p>$(‘#table’).on(‘event-name.bs.table’, function (e, arg1, arg2, …) {<br>    // …<br>    });</p></blockquote><hr><table><thead><tr><th>名称</th><th>定义在jQuery中的事件名</th><th>参数</th><th>作用描述</th></tr></thead><tbody><tr><td>onAll</td><td>all.bs.table</td><td>name, args</td><td>当所有触发器被触发时都执行此函数，就是所有的事件都会触发该事件，参数包括：           - name：事件名           - args：事件的数据</td></tr><tr><td>onClickRow</td><td>click-row.bs.table</td><td>row, $element, field</td><td>当单击此行的任意一处，就会触发该事件，所需参数如下（只是按原文译过来的，在bootstraptable的js中不需要这些参数，因为单击该行就会获得一个row，row中包括此行所有数据，只要通过此行某列的字段名即可取出）：           - row：哪一行（从0开始）           - $element：该行（tr）           - field：当点击该行，你想获取此行哪一格的数据，field就是此列字段名           - 参考：<a href="http://blog.csdn.net/s_clifftop/article/details/77915934" target="_blank" rel="noopener">Bootstrap Table 双击或单击行获取该行内容</a></td></tr><tr><td>onDblClickRow</td><td>dbl-click-row.bs.table</td><td>row, $element, field</td><td>和上面差不多，当双击（666）此行的任意一处，就会触发该事件，所需参数如下（只是按原文译过来的，在bootstraptable的js中不需要这些参数，因为双击该行就会获得一个row，row中包括此行所有数据，只要通过此行某列的字段名即可取出）：           - row：哪一行（从0开始）           - $element：该行（tr）           - field：当点击该行，你想获取此行哪一格的数据，field就是此列字段名           - 参考：<a href="http://blog.csdn.net/s_clifftop/article/details/77915934" target="_blank" rel="noopener">Bootstrap Table 双击或单击行获取该行内容</a></td></tr><tr><td>onClickCell</td><td>click-cell.bs.table</td><td>field, value, row, $element</td><td>当单击某一格，就会触发该事件，所需参数如下：           - field：此格所在列的字段名           - value：此格的数据           - $element：此行的此列，就是此格（td）</td></tr><tr><td>onDblClickCell</td><td>dbl-click-cell.bs.table</td><td>field, value, row, $element</td><td>当双击某一格，就会触发该事件，所需参数如下：           - field：此格所在列的字段名           - value：此格的数据           - $element：此行的此列，就是此格（td）</td></tr><tr><td>onSort</td><td>sort.bs.table</td><td>name, order</td><td>当对某列进行排序时触发该事件，所需参数如下：           - name：所排序的列的字段名           - order：所排的顺序</td></tr><tr><td>onCheck</td><td>check.bs.table</td><td>row, $element</td><td>当选择（check）此行时触发，所需的参数如下：           - row：所选择的行的字段名           - $element：此行的DOM元素</td></tr><tr><td>onUncheck</td><td>uncheck.bs.table</td><td>row, $element</td><td>当取消选择（uncheck）此行时触发，所需的参数如下：           - row：所取消选择的行的字段名           - $element：此行的DOM元素</td></tr><tr><td>onCheckAll</td><td>check-all.bs.table</td><td>rows</td><td>当全选行时触发，所需的参数如下：           - rows：最近（newly）所选择的行的字段名的数组</td></tr><tr><td>onUncheckAll</td><td>uncheck-all.bs.table</td><td>rows</td><td>当取消全选行时触发，所需的参数如下：           - rows：之前或上次（previously）所选择的行的字段名的数组</td></tr><tr><td>onCheckSome</td><td>check-some.bs.table</td><td>rows</td><td>当选择（check）某些行（多行，rows）时触发，所需的参数如下：           - rows：之前或上次（previously）所选择的行的字段名的数组</td></tr><tr><td>onUncheckSome</td><td>uncheck-some.bs.table</td><td>rows</td><td>当取消选择（uncheck）某些行（多行，rows）时触发，所需的参数如下：           - rows：之前或上次（previously）所选择的行的字段名的数组</td></tr><tr><td>onLoadSuccess</td><td>load-success.bs.table</td><td>data</td><td>当所有数据被加载时触发</td></tr><tr><td>onLoadError</td><td>load-error.bs.table</td><td>status, res</td><td>当加载某些数据出现错误时触发</td></tr><tr><td>onColumnSwitch</td><td>column-switch.bs.table</td><td>field, checked</td><td>当某列改变是否可见的状态时触发</td></tr><tr><td>onColumnSearch</td><td>column-search.bs.table</td><td>field, text</td><td>当某列被查询时触发</td></tr><tr><td>onPageChange</td><td>page-change.bs.table</td><td>number, size</td><td>当改变此页所显示的数据条数或改变页码时触发</td></tr><tr><td>onSearch</td><td>search.bs.table</td><td>text</td><td>当查询此表时触发</td></tr><tr><td>onToggle</td><td>toggle.bs.table</td><td>cardView</td><td>当改变表的视图时触发</td></tr><tr><td>onPreBody</td><td>pre-body.bs.table</td><td>data</td><td>当<code>&lt;tbody&gt;&lt;/tbody&gt;</code>中的内容没显示前触发</td></tr><tr><td>onPostBody</td><td>post-body.bs.table</td><td>data</td><td>当<code>&lt;tbody&gt;&lt;/tbody&gt;</code>中的内容被加载完后或者在你所用的DOM中有定义则被触发</td></tr><tr><td>onPostHeader</td><td>post-header.bs.table</td><td>none</td><td>当<code>&lt;thead&gt;&lt;/thead&gt;</code>中的内容被加载完后或者在你所用的DOM中有定义则被触发</td></tr><tr><td>onExpandRow</td><td>expand-row.bs.table</td><td>index, row, $detail</td><td>当查看详细视图（点击查看detail的图标）时触发</td></tr><tr><td>onCollapseRow</td><td>collapse-row.bs.table</td><td>index, row</td><td>当关闭详细视图（再次点击查看detail的图标）时触发</td></tr><tr><td>onRefreshOptions</td><td>refresh-options.bs.table</td><td>options</td><td>当刷新各项后或在初始化表（也包括销毁了再初始化）之前触发</td></tr><tr><td>onResetView</td><td>reset-view.bs.table</td><td></td><td>当重置（reset）表的视图时触发</td></tr><tr><td>onRefresh</td><td>refresh.bs.table</td><td>params</td><td>当点击刷新按钮（refresh，不是浏览器的，而是表格右上角的刷新按钮）后触发</td></tr></tbody></table><p><hr></p><h2 id="方法（Methods）"><a href="#方法（Methods）" class="headerlink" title="方法（Methods）"></a>方法（Methods）</h2><blockquote><p>定义方法响应的语法 <code>$(&#39;#table&#39;).bootstrapTable(&#39;method&#39;, parameter);</code></p></blockquote><table><thead><tr><th>方法名</th><th>参数</th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td>getOptions</td><td>none</td><td>返回各项的object</td><td>$table.bootstrapTable(‘getOptions’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/getOptions.html" target="_blank" rel="noopener">getOptions</a></td></tr><tr><td>getSelections</td><td>none</td><td>返回被选择的行，当没有行被选择，则返回空数组（但并不是undefined，也不是null，是长度为0的空数组，所以可以判断长度是否大于0来确定是否选择了行）</td><td>$table.bootstrapTable(‘getSelections’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/getSelections.html" target="_blank" rel="noopener">getSelections</a></td></tr><tr><td>getAllSelections</td><td>none</td><td>返回所有被选的行（原文中：contain search or filter，其实就是你选择的筛选之后的数据），当没有行被选择，则返回空数组</td><td>$table.bootstrapTable(‘getAllSelections’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/getAllSelections.html" target="_blank" rel="noopener">getAllSelections</a></td></tr><tr><td>showAllColumns</td><td>none</td><td>显示所有的列</td><td>$table.bootstrapTable(‘showAllColumns’);       - 就是显示所有的列，并没什么可说的</td></tr><tr><td>hideAllColumns</td><td>none</td><td>隐藏所有的列</td><td>$table.bootstrapTable(‘hideAllColumns’);       - 就是隐藏所有的列</td></tr><tr><td>getData</td><td>useCurrentPage</td><td>获取被加载的表的数据，如果你设置了使用当前页的数据（useCurrentPage），则返回当前页的数据</td><td>$table.bootstrapTable(‘getData’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/getData.html" target="_blank" rel="noopener">getData</a></td></tr><tr><td>getRowByUniqueId</td><td>id</td><td>获取你想要的某行的数据（设置某行的id）</td><td>$table.bootstrapTable(‘getRowByUniqueId’, 1);后面的1就是你要的那一行的ID       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/getRowByUniqueId.html" target="_blank" rel="noopener">getRowByUniqueId</a></td></tr><tr><td>load</td><td>data</td><td>向表中加载数据，原来的数据将被移除</td><td>$table.bootstrapTable(‘load’, data);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/load.html" target="_blank" rel="noopener">load</a></td></tr><tr><td>append</td><td>data</td><td>将数据追加在最后一行后</td><td>$table.bootstrapTable(‘append’, data);data可以是数组       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/append.html" target="_blank" rel="noopener">append</a></td></tr><tr><td>prepend</td><td>data</td><td>也是追加，只是在第一行之前</td><td>$table.bootstrapTable(‘prepend’, data);data可以是数组       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/prepend.html" target="_blank" rel="noopener">prepend</a></td></tr><tr><td>remove</td><td>params</td><td>移除一行或多行你所选的数据</td><td>$table.bootstrapTable(‘remove’, {field: ‘id’, values: ids});        - id：所需移除的那一行（rows，一或多行）的字段        - values：被移除的行的数组        - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/remove.html" target="_blank" rel="noopener">remove</a></td></tr><tr><td>removeAll</td><td>-</td><td>移除表中所有的数据</td><td>$table.bootstrapTable(‘removeAll’);        - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/removeAll.html" target="_blank" rel="noopener">removeAll</a></td></tr><tr><td>removeByUniqueId</td><td>-</td><td>移除某行数据（设置某行的id）</td><td>$table.bootstrapTable(‘removeByUniqueId’, 1);后面的1就是你想移除的那一行的ID        - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/removeByUniqueId.html" target="_blank" rel="noopener">removeByUniqueId</a></td></tr><tr><td>insertRow</td><td>params</td><td>新增一行，所需的参数如下：        - index：你想插入到哪（只要愿意，想插哪就插哪，想插谁就插谁）        - row：你想插入的数据</td><td>$table.bootstrapTable(‘insertRow’, {index: 1, row: row});        - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/insertRow.html" target="_blank" rel="noopener">insertRow</a></td></tr><tr><td>updateRow</td><td>params</td><td>更新行数据，所需的参数如下：        - index：所要更新的行的索引（index）        - row：你想换的新的数据</td><td>$table.bootstrapTable(‘updateRow’, {index: 1, row: row});        - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/updateRow.html" target="_blank" rel="noopener">updateRow</a>        - 请查看： <a href="http://blog.csdn.net/s_clifftop/article/details/77744791" target="_blank" rel="noopener">Bootstrap Table实现定时刷新数据</a></td></tr><tr><td>updateByUniqueId</td><td>params</td><td>更新某行数据，所需的参数如下：        - id：你想更新那行的id（唯一），（只要愿意，想换哪个换哪个）        - row：你想换的新的数据</td><td>$table.bootstrapTable(‘updateByUniqueId’, {id: 3, row: row});        - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/updateByUniqueId.html" target="_blank" rel="noopener">updateByUniqueId</a></td></tr><tr><td>showRow</td><td>params</td><td>显示特定行，所需的参数至少包括下面所列的一个：        - id：所要显示的行的索引（index）        - uniqueId：那一行的id</td><td>$table.bootstrapTable(‘showRow’, {index:1});        - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/showRow-hideRow.html" target="_blank" rel="noopener">showRow/hideRow</a></td></tr><tr><td>hideRow</td><td>params</td><td>隐藏特定行，所需的参数至少包括下面所列的一个：        - id：所要隐藏的行的索引（index）        - uniqueId：那一行的id</td><td>$table.bootstrapTable(‘hideRow’, {index:1});        - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/showRow-hideRow.html" target="_blank" rel="noopener">showRow/hideRow</a></td></tr><tr><td>getRowsHidden</td><td>boolean</td><td>获取隐藏的行（官方原话很多，其实总结起来就前面那一句）</td><td>$table.bootstrapTable(‘getRowsHidden’);</td></tr><tr><td>mergeCells</td><td>options</td><td>融合~（把多格合并为一格），所需的参数如下：        - index：所要合并的格所在行的索引（index）        - field：所在列的字段名        - rowspan：合并的行总数目        - colspan：合并的列总数目</td><td>$table.bootstrapTable(‘mergeCells’, {index: 1, field: ‘name’, colspan: 2, rowspan: 3});       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/mergeCells.html" target="_blank" rel="noopener">mergeCells</a></td></tr><tr><td>updateCell</td><td>params</td><td>更新某格数据，所需的参数如下：        - index：所要合并的格所在行的索引（index）        - field：所在列的字段名        - value：要换的新的数据  你也可以设置{reinit:false}来禁用表格的再次初始化</td><td>$table.bootstrapTable(‘updateCell’,{index:index,field:’id’,value:value});</td></tr><tr><td>refresh</td><td>params</td><td>刷新服务端的数据：        - 可以设置{silent:true}来 <del>偷偷地（&lt;_&lt;）</del> 刷新        - 设置{url:newUrl,pageNumber:pageNumber, pageSize:pageSize}改变请求的地址，页数，每页所显示的条数        - 可以设置{query:{foo:’bar’}}增加特定的参数</td><td>$table.bootstrapTable(‘refresh’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/refresh.html" target="_blank" rel="noopener">refresh</a></td></tr><tr><td>refreshOptions</td><td>options</td><td>看例子吧</td><td>- 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/refreshOptions.html" target="_blank" rel="noopener">refreshOptions</a></td></tr><tr><td>resetSearch</td><td>text</td><td>重置搜索的文本（text）</td><td>- 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/resetSearch.html" target="_blank" rel="noopener">resetSearch</a></td></tr><tr><td>showLoading</td><td>none</td><td>显示正在加载……</td><td>- 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/showLoading-hideLoading.html" target="_blank" rel="noopener">showLoading/hideLoading</a></td></tr><tr><td>hideLoading</td><td>none</td><td>隐藏正在加载……</td><td>- 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/showLoading-hideLoading.html" target="_blank" rel="noopener">showLoading/hideLoading</a></td></tr><tr><td>checkAll</td><td>none</td><td>选择当前页的所有行</td><td>$table.bootstrapTable(‘checkAll’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/checkAll-uncheckAll.html" target="_blank" rel="noopener">checkAll/uncheckAll</a></td></tr><tr><td>uncheckAll</td><td>none</td><td>取消选择当前页的所有行</td><td>$table.bootstrapTable(‘uncheckAll’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/checkAll-uncheckAll.html" target="_blank" rel="noopener">checkAll/uncheckAll</a></td></tr><tr><td>checkInvert</td><td>none</td><td>反向选择，不难理解吧</td><td>$table.bootstrapTable(‘checkInvert’);</td></tr><tr><td>check</td><td>index</td><td>选择某一行，索引（index）从0开始</td><td>$table.bootstrapTable(‘check’, 1);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/check-uncheck.html" target="_blank" rel="noopener">check/uncheck</a></td></tr><tr><td>uncheck</td><td>index</td><td>取消选择某一行，索引（index）从0开始</td><td>$table.bootstrapTable(‘uncheck’, 1);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/check-uncheck.html" target="_blank" rel="noopener">check/uncheck</a></td></tr><tr><td>checkBy</td><td>params</td><td>通过数组选择某一行，所需的参数如下：       - field：所要选的字段名        - values：所要选的那些值（数组）</td><td>官方没，啊，有例纸： - $(“#table”).bootstrapTable(“checkBy”, { field:”field_name”, values:[“value1”,”value2”,”value3”]});       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/checkBy-uncheckBy.html" target="_blank" rel="noopener">checkBy/uncheckBy</a></td></tr><tr><td>uncheckBy</td><td>params</td><td>通过数组选择某一行，所需的参数如下：       - field：所要取消选择的字段名        - values：所要取消选择的那些值（数组）</td><td>$(“#table”).bootstrapTable(“uncheckBy”, { field:”field_name”, values:[“value1”,”value2”,”value3”]});       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/checkBy-uncheckBy.html" target="_blank" rel="noopener">checkBy/uncheckBy</a></td></tr><tr><td>resetView</td><td>params</td><td>改变表格的样式，例如改变表格的高度（height）</td><td>$table.bootstrapTable(‘resetView’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/resetView.html" target="_blank" rel="noopener">resetView</a></td></tr><tr><td>resetWidth</td><td>none</td><td>自动改变表头和表脚（就译成脚，任性）的宽度来适应每列的宽度</td><td>$table.bootstrapTable(‘resetWidth’);</td></tr><tr><td>destroy</td><td>none</td><td>销毁表格 A！T！T！A！C！K！</td><td>$table.bootstrapTable(‘destroy’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/destroy.html" target="_blank" rel="noopener">destroy</a></td></tr><tr><td>showColumn</td><td>field</td><td>显示特定的列</td><td>$table.bootstrapTable(‘showColumn’, ‘name’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/showColumn-hideCoulumn.html" target="_blank" rel="noopener">showColumn/hideCoulumn</a></td></tr><tr><td>hideColumn</td><td>field</td><td>隐藏特定的列</td><td>$table.bootstrapTable(‘hideColumn’, ‘name’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/showColumn-hideCoulumn.html" target="_blank" rel="noopener">showColumn/hideCoulumn</a></td></tr><tr><td>getHiddenColumns</td><td>-</td><td>获取所有隐藏的列</td><td>$table.bootstrapTable(‘getHiddenColumns’);</td></tr><tr><td>getVisibleColumns</td><td>-</td><td>获取所有显示的列</td><td>$table.bootstrapTable(‘getVisibleColumns’);</td></tr><tr><td>scrollTo</td><td>value</td><td>滚……到哪个位置，单位是’px’，如果设为’bottom’，嗖，恭喜你已到表尾</td><td>$table.bootstrapTable(‘scrollTo’, 0);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/scrollTo.html" target="_blank" rel="noopener">scrollTo</a></td></tr><tr><td>getScrollPosition</td><td>none</td><td>获取当前所滚到的位置，单位你懂得，就是’px’</td><td>$table.bootstrapTable(‘getScrollPosition’);</td></tr><tr><td>filterBy</td><td>none</td><td>只能在客户端（client-side，相对server-side）这边用，过滤表中的数据  例如：        - 可以设置{age:10}来只显示age为10的数据        - 不仅单的，你还可以双飞，甚至多p，设置{age: 10, hairColor: [“blue”, “red”, “green”]} ，这样你就得到了一群10岁的，头发颜色为蓝，红，绿的……数据</td><td>$table.bootstrapTable(‘filterBy’, { id: [1, 2, 3] });       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/filterBy.html" target="_blank" rel="noopener">filterBy</a></td></tr><tr><td>selectPage</td><td>page</td><td>跳转到特定的页面</td><td>$table.bootstrapTable(‘selectPage’, 1);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/selectPage-prevPage-nextPage.html" target="_blank" rel="noopener">selectPage/prevPage/nextPage</a></td></tr><tr><td>prevPage</td><td>none</td><td>跳转到上一页</td><td>$table.bootstrapTable(‘prevPage’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/selectPage-prevPage-nextPage.html" target="_blank" rel="noopener">selectPage/prevPage/nextPage</a></td></tr><tr><td>nextPage</td><td>none</td><td>跳转到下一页</td><td>$table.bootstrapTable(‘nextPage’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/selectPage-prevPage-nextPage.html" target="_blank" rel="noopener">selectPage/prevPage/nextPage</a></td></tr><tr><td>togglePagination</td><td>none</td><td>词穷，请看例纸</td><td>$table.bootstrapTable(‘togglePagination’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/togglePagination.html" target="_blank" rel="noopener">togglePagination</a></td></tr><tr><td>toggleView</td><td>none</td><td>改变视图</td><td>$table.bootstrapTable(‘toggleView’);       - 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/toggleView.html" target="_blank" rel="noopener">toggleView</a></td></tr><tr><td>expandRow</td><td>index</td><td>可使用条件：detail view设为了true，不然无法使用视图功能，这个也没用        - 通过参数index来展开此列的详细视图</td><td>- 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/expandRow-collapseRow.html" target="_blank" rel="noopener">expandRow-collapseRow</a></td></tr><tr><td>collapseRow</td><td>index</td><td>可使用条件：detail view设为了true        - 通过参数index来关闭此列的详细视图</td><td>- 请查看： <a href="http://issues.wenzhixin.net.cn/bootstrap-table/#methods/expandRow-collapseRow.html" target="_blank" rel="noopener">expandRow-collapseRow</a></td></tr><tr><td>expandAllRow</td><td>is subtable</td><td>可使用条件：detail view设为了true        - 展开所有列的详细视图</td><td>$table.bootstrapTable(‘expandAllRow’);        - 参考上面的实例，上面是展开（折叠）某一行的视图，这个是所有行的</td></tr><tr><td>collapseAllRow</td><td>is subtable</td><td>可使用条件：detail view设为了true        - 关闭所有列的详细视图</td><td>$table.bootstrapTable(‘collapseAllRow’);        - 参考上面</td></tr></tbody></table><p><hr></p><h2 id="本地化，切换为另一种语言（Localizations）"><a href="#本地化，切换为另一种语言（Localizations）" class="headerlink" title="本地化，切换为另一种语言（Localizations）"></a>本地化，切换为另一种语言（Localizations）</h2><blockquote><p>默认显示英文，如果想使用中文，首先引入：</p><p><code>&lt;script src=&quot;bootstrap-table-zh-CN.js&quot;&gt;&lt;/script&gt;</code></p><p>然后是三种声明使用的方法（个人只使用第二、三种），如下：</p></blockquote><ul><li><p>第一种：</p><blockquote><p><code>$.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales[&#39;zh-CN&#39;]);</code></p></blockquote></li><li><p>第二种：</p><blockquote><p><code>&lt;table data-toggle=&quot;table&quot; data-locale=&quot;zh-CN&quot;&gt;&lt;/table&gt;</code></p></blockquote></li><li><p>第三种：</p><blockquote><p><code>$(&#39;table&#39;).bootstrapTable({locale:&#39;zh-CN&#39;});</code></p></blockquote><hr></li><li><p>以下说明除了数字外均为中文默认显示，本来不用写的，只要引入就显示中文了</p></li></ul><table><thead><tr><th>名称</th><th>参数</th><th>默认</th><th>说明</th></tr></thead><tbody><tr><td>formatLoadingMessage</td><td>-</td><td>‘Loading, please wait…’</td><td>“加载中，请等待……”</td></tr><tr><td>formatRecordsPerPage</td><td>pageNumber</td><td>‘%s records per page’</td><td>“每页显示 15 条记录”</td></tr><tr><td>formatShowingRows</td><td>pageFrom, pageTo, totalRows</td><td>‘Showing %s to %s of %s rows’</td><td>“显示第 1 到第 15 条记录”</td></tr><tr><td>formatDetailPagination</td><td>totalRows</td><td>‘Showing %s rows’</td><td>“总共 15 条记录”</td></tr><tr><td>formatSearch</td><td>-</td><td>‘Search’</td><td>“搜索”（占位符）</td></tr><tr><td>formatNoMatches</td><td>-</td><td>‘No matching records found’</td><td>“没有找到匹配的记录”</td></tr><tr><td>formatRefresh</td><td>-</td><td>‘Refresh’</td><td>“刷新”（鼠标悬浮显示的文字，下同）</td></tr><tr><td>formatToggle</td><td>-</td><td>‘Toggle’</td><td>“切换”</td></tr><tr><td>formatColumns</td><td>-</td><td>‘Columns’</td><td>“列”</td></tr></tbody></table><hr><p>有错请留言，看到后会及时更改，如果像那种翻译的行写成列或漏字等低级错误，看英文名称就知道有没有错了，主要就是为了让你们知道怎么用，会持续检查哪有误、漏译，如果认为有译得不妥的地方，也可以留言一起讨论，谢谢</p><p><hr><br>其他相关：</p><ul><li>Bootstrap Table实现定时刷新数据  <a href="http://blog.csdn.net/s_clifftop/article/details/77744791" target="_blank" rel="noopener">http://blog.csdn.net/s_clifftop/article/details/77744791</a></li><li>Bootstrap Table 双击或单击行获取该行内容  <a href="http://blog.csdn.net/s_clifftop/article/details/77915934" target="_blank" rel="noopener">http://blog.csdn.net/s_clifftop/article/details/77915934</a><br><br><br><br></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;p&gt;Bootstrap Table API 完整翻译文档&lt;/p&gt;
&lt;hr&gt;



&lt;blockquote&gt;
&lt;p&gt;$(‘#table’).bootstrapTable({});&lt;br&gt;看网上有中文版的，但有些就是字面直接译过来了，而且有的就没有翻译，那就打算自己再翻译一遍，每一条会尽&lt;br&gt;最大可能结合尽可能多资料翻译，如果发现译的内容比英文多，是添加了更详细的说明，表的名称，属性，类型，&lt;br&gt;默认值不翻译，例如：”class”、”id”等不翻译。&lt;br&gt;有错请提出，会及时改正，谢谢。&lt;br&gt;Bootstrap table 中文文档（完整翻译文档）如果想转请注明@Sclifftop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;“名称”可以写在&lt;code&gt;$(&amp;#39;#table&amp;#39;).bootstrapTable({});&lt;/code&gt;的大括号中，可以定义一些想要的值，如：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;quot;#realTime_Table&amp;quot;).bootstrapTable(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		       search: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            pagination: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            pageSize: 15,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            pageList: [5, 10, 15, 20],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            showColumns: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            showRefresh: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            showToggle: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            locale: &amp;quot;zh-CN&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            striped: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="bootstrap-table" scheme="https://www.sclifftop.com/tags/bootstrap-table/"/>
    
      <category term="中文API" scheme="https://www.sclifftop.com/tags/%E4%B8%AD%E6%96%87API/"/>
    
      <category term="bootstrap" scheme="https://www.sclifftop.com/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>God eat God</title>
    <link href="https://www.sclifftop.com/2017/08/12/God-eat-God/"/>
    <id>https://www.sclifftop.com/2017/08/12/God-eat-God/</id>
    <published>2017-08-11T16:05:12.000Z</published>
    <updated>2018-06-12T14:23:14.000Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>词：曼球<br>译：Sclifftop</p></blockquote><p><br></p><h2 id="God-eat-God"><a href="#God-eat-God" class="headerlink" title="God eat God"></a>God eat God</h2><p>Dear god do you want to tear your knuckles down and hold yourself</p><blockquote><p>上帝啊，你是否想被别人从十字架上拯救下来，然后改写你那可怜的命运</p></blockquote><p>Dear god can you climb up that tree meat in the shape of a ‘t’</p><blockquote><p>上帝啊，当没人逼你时你是否会主动爬上十字架当那一块任人宰割的肉</p></blockquote><p>Dear god the paper says you were the king in the black limousine</p><blockquote><p>上帝啊，书上说你是高高在上的王者</p></blockquote><a id="more"></a><p>Dear john and all the king’s men can’t put you head together again</p><blockquote><p>但是为什么纵使你有上千万的信徒也无法拼凑完你那小小的躯壳</p></blockquote><p>before the bullets</p><blockquote><p>在你被杀之前</p></blockquote><p>before the flies</p><blockquote><p>在没有被蛆虫啃食干净之前</p></blockquote><p>before authorities take out my eyes</p><blockquote><p>在掌权者蒙蔽我的双眼之前</p></blockquote><p>the only smiling are you dolls that i made</p><blockquote><p>你就像我做的娃娃一样，连自己微笑的权力都没有</p></blockquote><p>but you are plastic and so are your brains</p><blockquote><p>你只是一具没有思想的尸体罢了</p></blockquote><p>Dear god the sky is as blue as a gunshot wound</p><blockquote><p>上帝啊，你看，那天空和你伤口有一样的颜色</p></blockquote><p>Dear god if you were alive you know we’d kill you</p><blockquote><p>上帝啊，别想存活在这个世上，因为只要有我们在，你一定会被蚕食殆尽</p></blockquote><p>before the bullets</p><blockquote><p>在被杀之前</p></blockquote><p>before the flies</p><blockquote><p>在还没有被蛆虫啃食干净之前</p></blockquote><p>before authorities take out my eyes</p><blockquote><p>在掌权者蒙蔽我的双眼之前</p></blockquote><p>the only smiling are you dolls that i made</p><blockquote><p>你就像我做的娃娃一样，连自己微笑的权力都没有</p></blockquote><p>but you are plastic and so are your brains</p><blockquote><p>你只是一具没有思想的尸体，像狗一样可怜又可悲</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;词：曼球&lt;br&gt;译：Sclifftop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;God-eat-God&quot;&gt;&lt;a href=&quot;#God-eat-God&quot; class=&quot;headerlink&quot; title=&quot;God eat God&quot;&gt;&lt;/a&gt;God eat God&lt;/h2&gt;&lt;p&gt;Dear god do you want to tear your knuckles down and hold yourself&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上帝啊，你是否想被别人从十字架上拯救下来，然后改写你那可怜的命运&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dear god can you climb up that tree meat in the shape of a ‘t’&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上帝啊，当没人逼你时你是否会主动爬上十字架当那一块任人宰割的肉&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dear god the paper says you were the king in the black limousine&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上帝啊，书上说你是高高在上的王者&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="曼球" scheme="https://www.sclifftop.com/tags/%E6%9B%BC%E7%90%83/"/>
    
      <category term="译" scheme="https://www.sclifftop.com/tags/%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>Windows下搭建pomelo开发环境</title>
    <link href="https://www.sclifftop.com/2017/08/02/Windows%E4%B8%8B%E6%90%AD%E5%BB%BApomelo%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://www.sclifftop.com/2017/08/02/Windows下搭建pomelo开发环境/</id>
    <published>2017-08-01T23:02:35.000Z</published>
    <updated>2018-06-13T07:13:58.000Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>Pomelo 是基于 Node.js 的高性能、分布式游戏服务器框架。它包括基础的开发框架和相关的扩展组件（库和工具包），可以帮助你省去游戏开发枯燥中的重复劳动和底层逻辑的开发。以上为百度，我综合了很多，写一个比较全的搭建开发环境的步骤，下面开始介绍安装什么，该怎么安装，以及安装后怎么运行和关闭。</p></blockquote><hr><ul><li>老规矩，先放所需要的链接，后面还会重复： <ul><li>Python :<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">https://www.python.org/downloads/windows/</a> 。</li><li>Node.js：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a> 。</li><li>Git：<a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">https://git-for-windows.github.io/</a> 。（如果下载不动，用我的百度云盘[最新更新日期17.8.4，Git版本Git_2.14.0.2]：<a href="http://pan.baidu.com/s/1i5j7i9B" target="_blank" rel="noopener">http://pan.baidu.com/s/1i5j7i9B</a>  密码：83e9）</li></ul></li></ul><hr><p>先输入命令行检查一下是否有安装过：</p><a id="more"></a><pre><code>node -v、python -V、git --version（前面两个v是区分大小写，查看git版本两个&quot;-&quot;）。</code></pre><p>若都有显示出版本号，则均已安装，请跳到步骤5。</p><hr><p>1、安装Node.js（安装后就检查一下版本号，若没有显示，则安装失败，下同）：</p><ul><li>网址下载：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a> ，安装步骤太简单，参考百度安装教程：<a href="http://jingyan.baidu.com/article/b0b63dbfca599a4a483070a5.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/b0b63dbfca599a4a483070a5.html</a> 。</li></ul><p>2、安装Python：</p><ul><li>网址下载：<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">https://www.python.org/downloads/windows/</a> ，参考百度安装教程：<a href="http://jingyan.baidu.com/article/7908e85c78c743af491ad261.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/7908e85c78c743af491ad261.html</a> 。</li></ul><p>3、关于VC++编译器</p><ul><li>GitHub：”VC++ 编译器，包含在Visual Studio 2010中（VC++ 2010 Express亦可）。”，因为有vs2013，自然有编译器，所有就没考虑该步。</li></ul><p>4、安装Git：</p><ul><li>网址下载：<a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">https://git-for-windows.github.io/</a> （如果下载不动，用我的百度云盘[最新更新日期17.8.4，Git版本Git_2.14.0.2]：<a href="http://pan.baidu.com/s/1i5j7i9B" target="_blank" rel="noopener">http://pan.baidu.com/s/1i5j7i9B</a>  密码：83e9），参考廖先森的Git教程：<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a> 。</li></ul><p>5、安装component：</p><ul><li>运行命令行，输入：”npm install -g component” 。</li></ul><p>6、安装pomelo：</p><ul><li>输入：”npm install -g pomelo” 。</li><li>然后检查一下：”pomelo –version”（两个”-“哦），若显示版本号，则安装成功。</li></ul><p>7、创建pomelo项目：</p><ul><li>看一下命令行所在文件目录，就是前面那一串，如果你想在当前目录创建则不改变，若想自定义则进入你想创建该项目的目录。</li><li>输入”mkdir first_project”。</li><li>然后进入该文件夹，输入”pomelo init”。</li><li>选择你想的那个connector（输入1-6）（如果不懂6项不同协议的connector，没关系，先选1，这只是一个项目，可以以后了解了再改，先确保怎么安装配置）。</li><li>再输入”npm-install.bat”。    </li></ul><p>8、启动服务端</p><ul><li>执行上步后，已经在game-server文件夹下了。</li><li>输入”pomelo start “启动。</li></ul><p>9、再开启一个命令行窗口：</p><ul><li>进入你之前创建的项目文件夹根目录下，也就是first_project。</li><li>进入web_server，然后输入：”bin\component.bat”。</li><li>接着后退到web_server文件夹下，执行”node app”。    </li></ul><p>10、在chrome（嘿嘿，谷歌）浏览器打开网页</p><ul><li>在上一步，你应该能得到一串字符，虽然你看不懂是什么，但在最后应该写的是”Please log on <a href="http://127.0.0.1:3001/index.html&quot;，那么输入后面的网址，显示下面的图片。" target="_blank" rel="noopener">http://127.0.0.1:3001/index.html&quot;，那么输入后面的网址，显示下面的图片。</a></li></ul><p><img src="http://img.blog.csdn.net/20170802184311093?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvU19jbGlmZnRvcA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="你瞅啥">    </p><p>11、点击那个按钮”Test Game Server”</p><ul><li>点击后，之前输入”pomelo start”的那个命令行窗口会输出DEBUG和INFO信息，并且网页显示”game server is ok”就表示ok 。    </li></ul><p>12、查看已经启动的服务器</p><ul><li>新建命令行窗口，输入”pomelo list”查看已经启动的服务器 。<ul><li>serverId：服务器的serverId，同config配置表中的id 。</li><li>serverType：服务器的serverType，同config配置表中的type 。</li><li>pid：服务器对应的进程pid 。</li><li>rss：实际使用的物理内存（单位：M）。</li><li>heapTotal：堆总共占用的大小（单位：M）。</li><li>headUsed：该服务器已经使用的堆大小（单位：M）。</li><li>uptime：该服务器启动时长（单位：Min）。</li></ul></li></ul><p>13、关闭项目</p><ul><li>进入到该项目的game-server文件夹下 。</li><li>输入”pomelo stop”或”pomelo kill”，会显示如下图（不是连输了两次命令，只要一个就够了，我只是示范，启动了两次用了不同命令关闭的，尽量使用”pomelo stop”，安全退出）：</li></ul><p><img src="http://img.blog.csdn.net/20170803134051124?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvU19jbGlmZnRvcA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="pomelo页面"><br><br><hr><br>大体就是这样，细节什么的我会一直检查修改，或许遇到更简便的方法会再更新，如果步骤有错或缺少也可以提出来，谢谢。<br><br><hr></p><p>最后，我还想说两句，但不知道该说什么，homie来个freestyle：<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Yo，check it，check it，你看这个开发环境需要配置这么多，就像那个软件安装步骤也要那么多，yeah，peace！！<br></p><p> /—我覺得OK—/ /—我覺得不行—/ /—我覺得可以—/ /—我覺得很普通—/ /—他一定可以，你這樣做有失公正—/ /—糖糖先給他過—/<br> <br><br>我觉得在很稳定的发挥后得到这样的一个评价，我觉得我情绪有点失控 。<br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;Pomelo 是基于 Node.js 的高性能、分布式游戏服务器框架。它包括基础的开发框架和相关的扩展组件（库和工具包），可以帮助你省去游戏开发枯燥中的重复劳动和底层逻辑的开发。以上为百度，我综合了很多，写一个比较全的搭建开发环境的步骤，下面开始介绍安装什么，该怎么安装，以及安装后怎么运行和关闭。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;老规矩，先放所需要的链接，后面还会重复： &lt;ul&gt;
&lt;li&gt;Python :&lt;a href=&quot;https://www.python.org/downloads/windows/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.python.org/downloads/windows/&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;Node.js：&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nodejs.org/en/&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;Git：&lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://git-for-windows.github.io/&lt;/a&gt; 。（如果下载不动，用我的百度云盘[最新更新日期17.8.4，Git版本Git_2.14.0.2]：&lt;a href=&quot;http://pan.baidu.com/s/1i5j7i9B&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://pan.baidu.com/s/1i5j7i9B&lt;/a&gt;  密码：83e9）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;p&gt;先输入命令行检查一下是否有安装过：&lt;/p&gt;
    
    </summary>
    
    
      <category term="windows" scheme="https://www.sclifftop.com/tags/windows/"/>
    
      <category term="pomelo环境" scheme="https://www.sclifftop.com/tags/pomelo%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
</feed>
